{"version":3,"file":"starry-header.js","sourceRoot":"","sources":["../../../src/components/layout/starry-header.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useCallback, useMemo } from \"react\";\nimport { cn } from \"@/utils\";\n\ninterface StarryHeaderBackgroundProps {\n  width?: number;\n  height?: number;\n  backgroundColor?: string; // e.g., '#171A17'\n  starColor?: string; // e.g., '#FBCB4A'\n  className?: string;\n  reducedMotion?: boolean; // New prop for accessibility\n}\n\n// Original star settings - keeping visual fidelity\nconst FOREGROUND_STARS = 15;\nconst MIDDLE_STARS = 50;\nconst BACKGROUND_STARS = 250;\nconst CLUSTER_CHANCE = 0.15;\nconst STARS_PER_CLUSTER = 4;\nconst CLUSTER_RADIUS = 15;\n\n// Performance optimization constants\nconst TARGET_FPS = 60; // Keep original 60fps\nconst FRAME_INTERVAL = 1000 / TARGET_FPS;\nconst MOUSE_THROTTLE_MS = 16; // ~60fps for mouse tracking\nconst TRANSFORM_PRECISION = 1; // Decimal places for transform values\nconst OPACITY_PRECISION = 2; // Decimal places for opacity values\nconst SIGNIFICANT_CHANGE_THRESHOLD = 0.1; // Minimum change to trigger DOM update\n\n// Define star data types with performance caching\ninterface StarData {\n  element: HTMLDivElement;\n  x: number;\n  y: number;\n  originX: number;\n  originY: number;\n  initialOpacity: number;\n  size: number;\n  layer: \"foreground\" | \"middle\" | \"background\";\n  dx: number;\n  dy: number;\n  container?: HTMLDivElement;\n  // Performance caching\n  lastTransform?: string;\n  lastOpacity?: number;\n  lastX?: number;\n  lastY?: number;\n  // Pre-calculated values\n  maxDisplacement: number;\n  ease: number;\n  velocityDamping: number;\n  influenceRangeX: number;\n  influenceRangeY: number;\n  twinkleIntensity: number;\n  minOpacityFactor: number;\n  maxOpacityFactor: number;\n}\n\nexport const StarryHeaderBackground: React.FC<StarryHeaderBackgroundProps> = ({\n  height = 136,\n  backgroundColor = \"#171A17\",\n  starColor = \"#FBCB4A\",\n  className,\n  reducedMotion = false,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const starfieldRef = useRef<HTMLDivElement>(null);\n  const allStarsRef = useRef<StarData[]>([]);\n  const mousePosRef = useRef<{ x: number; y: number }>({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n  });\n  const animationFrameRef = useRef<number>();\n  const containerRectRef = useRef<DOMRect | null>(null);\n\n  // Performance optimization refs\n  const lastFrameTimeRef = useRef<number>(0);\n  const lastMouseUpdateRef = useRef<number>(0);\n\n  // Cached calculations - will be updated when container size changes\n  const containerCenterRef = useRef<{ x: number; y: number }>({\n    x: 0,\n    y: height / 2,\n  });\n  const containerSizeRef = useRef<{ width: number; height: number }>({\n    width: 430,\n    height,\n  });\n  const pendingUpdatesRef = useRef<Array<() => void>>([]);\n\n  // Memoized values for performance\n  const starColorClass = useMemo(\n    () => (starColor === \"#FBCB4A\" ? \"yellow-star\" : \"black-star\"),\n    [starColor],\n  );\n\n  // Update cached dimensions when container size changes\n  const updateContainerDimensions = useCallback(() => {\n    if (containerRef.current) {\n      const rect = containerRef.current.getBoundingClientRect();\n      if (rect.width > 0) {\n        containerSizeRef.current = { width: rect.width, height: rect.height };\n        containerCenterRef.current = { x: rect.width / 2, y: rect.height / 2 };\n        containerRectRef.current = rect;\n      }\n    }\n  }, []);\n\n  // Track if stars have been initialized to avoid race conditions\n  const starsInitializedRef = useRef(false);\n  // Track if star creation is already pending to prevent duplicates\n  const starCreationPendingRef = useRef(false);\n\n  // --- Dynamic Style Injection (updated to remove shooting star styles) ---\n  useEffect(() => {\n    const styleId = \"starry-background-styles\";\n    if (document.getElementById(styleId)) return;\n\n    const styleSheet = document.createElement(\"style\");\n    styleSheet.id = styleId;\n    styleSheet.textContent = `\n            .starry-container .star {\n                position: absolute;\n                transform-origin: center center;\n                will-change: transform, opacity;\n            }\n            .starry-container .black-star { background-color: #171A17; }\n            .starry-container .yellow-star { background-color: #FBCB4A; }\n\n            .starry-container .star.foreground {\n                border-radius: 1px;\n            }\n\n            /* Original glows - keeping visual fidelity */\n            .starry-container .black-star.foreground { box-shadow: 0 0 8px rgba(23, 26, 23, 0.8); }\n            .starry-container .black-star.middle { box-shadow: 0 0 6px rgba(23, 26, 23, 0.6); }\n            .starry-container .black-star.background { box-shadow: 0 0 3px rgba(23, 26, 23, 0.4); }\n            .starry-container .yellow-star.foreground { box-shadow: 0 0 8px rgba(251, 203, 74, 0.8); }\n            .starry-container .yellow-star.middle { box-shadow: 0 0 6px rgba(251, 203, 74, 0.6); }\n            .starry-container .yellow-star.background { box-shadow: 0 0 3px rgba(251, 203, 74, 0.4); }\n\n            .starry-container .gradient-fade {\n                position: absolute;\n                bottom: 0;\n                left: 0;\n                width: 100%;\n                height: 50px;\n                background: linear-gradient(to bottom, transparent, ${backgroundColor});\n                pointer-events: none;\n            }\n        `;\n    document.head.appendChild(styleSheet);\n  }, [backgroundColor]);\n\n  // --- Optimized Star Creation Logic with Pre-calculations ---\n  const createStarInLayer = useCallback(\n    (\n      starfield: HTMLElement,\n      stars: StarData[],\n      layerClass: \"foreground\" | \"middle\" | \"background\",\n      minSize: number,\n      maxSize: number,\n      minOpacity: number,\n      maxOpacity: number,\n      containerWidth: number,\n      containerHeight: number,\n      returnData = false,\n      forceX: number | null = null,\n      forceY: number | null = null,\n    ): StarData | undefined => {\n      let layerMinSize = minSize;\n      let layerMaxSize = maxSize;\n      if (layerClass === \"foreground\") {\n        layerMinSize = 2.0;\n        layerMaxSize = 3.5;\n      } else if (layerClass === \"middle\") {\n        layerMinSize = 1.5;\n        layerMaxSize = 2.8;\n      }\n\n      const size = layerMinSize + Math.random() * (layerMaxSize - layerMinSize);\n      const opacity = minOpacity + Math.random() * (maxOpacity - minOpacity);\n\n      const element = document.createElement(\"div\");\n      element.className = `star ${starColorClass} ${layerClass}`;\n      element.style.width = `${size}px`;\n      element.style.height = `${size}px`;\n      element.style.opacity = opacity.toString();\n\n      const xPos = forceX !== null ? forceX : Math.random() * containerWidth;\n      const yPos = forceY !== null ? forceY : Math.random() * containerHeight;\n      const initialTransform = `translate(${xPos}px, ${yPos}px) rotate(45deg)`;\n      element.style.transform = initialTransform;\n\n      // Pre-calculate layer-specific values for performance\n      let maxDisplacement = 0;\n      let ease = 0.1;\n      let velocityDamping = 0.85;\n      let twinkleIntensity = 0.25;\n\n      switch (layerClass) {\n        case \"foreground\":\n          maxDisplacement = 15;\n          ease = 0.15;\n          velocityDamping = 0.8;\n          twinkleIntensity = 0.25;\n          break;\n        case \"middle\":\n          maxDisplacement = 8;\n          ease = 0.1;\n          velocityDamping = 0.85;\n          twinkleIntensity = 0.2;\n          break;\n        case \"background\":\n          maxDisplacement = 4;\n          ease = 0.07;\n          velocityDamping = 0.9;\n          twinkleIntensity = 0.15;\n          break;\n      }\n\n      const starData: StarData = {\n        element,\n        x: xPos,\n        y: yPos,\n        originX: xPos,\n        originY: yPos,\n        initialOpacity: opacity,\n        size,\n        layer: layerClass,\n        dx: 0,\n        dy: 0,\n        container: containerRef.current ?? undefined,\n        lastTransform: initialTransform,\n        lastOpacity: opacity,\n        lastX: xPos,\n        lastY: yPos,\n        // Pre-calculated performance values using actual container dimensions\n        maxDisplacement,\n        ease,\n        velocityDamping,\n        influenceRangeX: containerWidth * 1.5,\n        influenceRangeY: containerHeight * 2,\n        twinkleIntensity,\n        minOpacityFactor: 0.6,\n        maxOpacityFactor: 1.2,\n      };\n\n      if (returnData) {\n        return starData;\n      } else {\n        starfield.appendChild(element);\n        stars.push(starData);\n      }\n      return undefined;\n    },\n    [starColorClass],\n  );\n\n  // Helper function to create all stars\n  const createAllStars = useCallback(() => {\n    const starfield = starfieldRef.current;\n    const container = containerRef.current;\n    if (!starfield || !container) return;\n\n    // Ensure we have current dimensions\n    updateContainerDimensions();\n    const { width: containerWidth, height: containerHeight } =\n      containerSizeRef.current;\n\n    // Don't create stars if container is too small\n    if (containerWidth < 50) {\n      return;\n    }\n\n    allStarsRef.current = [];\n    starfield.innerHTML = \"\";\n    starsInitializedRef.current = true;\n\n    const containerStars: StarData[] = [];\n\n    // Create foreground stars (original count)\n    for (let i = 0; i < FOREGROUND_STARS; i++) {\n      createStarInLayer(\n        starfield,\n        containerStars,\n        \"foreground\",\n        2.0,\n        3.5,\n        0.7,\n        1.0,\n        containerWidth,\n        containerHeight,\n      );\n    }\n\n    // Create middle stars (original count)\n    for (let i = 0; i < MIDDLE_STARS; i++) {\n      createStarInLayer(\n        starfield,\n        containerStars,\n        \"middle\",\n        1.5,\n        2.8,\n        0.5,\n        0.8,\n        containerWidth,\n        containerHeight,\n      );\n    }\n\n    // Create background stars with clustering (original logic)\n    let currentBackgroundStars = 0;\n    while (currentBackgroundStars < BACKGROUND_STARS) {\n      const primaryStarData = createStarInLayer(\n        starfield,\n        containerStars,\n        \"background\",\n        0.5,\n        1.3,\n        0.3,\n        0.5,\n        containerWidth,\n        containerHeight,\n        true,\n      );\n      if (!primaryStarData) continue;\n      currentBackgroundStars++;\n\n      const potentialTotalAfterCluster =\n        currentBackgroundStars + STARS_PER_CLUSTER;\n      if (\n        Math.random() < CLUSTER_CHANCE &&\n        potentialTotalAfterCluster <= BACKGROUND_STARS\n      ) {\n        starfield.appendChild(primaryStarData.element);\n        containerStars.push(primaryStarData);\n\n        for (let j = 0; j < STARS_PER_CLUSTER; j++) {\n          const clusterOffsetX = (Math.random() - 0.5) * 2 * CLUSTER_RADIUS;\n          const clusterOffsetY = (Math.random() - 0.5) * 2 * CLUSTER_RADIUS;\n          let clusterX = primaryStarData.x + clusterOffsetX;\n          let clusterY = primaryStarData.y + clusterOffsetY;\n          clusterX = Math.max(0, Math.min(containerWidth, clusterX));\n          clusterY = Math.max(0, Math.min(containerHeight, clusterY));\n\n          createStarInLayer(\n            starfield,\n            containerStars,\n            \"background\",\n            0.4,\n            1.0,\n            0.25,\n            0.45,\n            containerWidth,\n            containerHeight,\n            false,\n            clusterX,\n            clusterY,\n          );\n          currentBackgroundStars++;\n        }\n      } else {\n        starfield.appendChild(primaryStarData.element);\n        containerStars.push(primaryStarData);\n      }\n    }\n\n    containerStars.forEach((star) => {\n      star.container = container;\n      allStarsRef.current.push(star);\n    });\n  }, [createStarInLayer, updateContainerDimensions]);\n\n  // --- Simple initialization with layout effect ---\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    let timeoutId: NodeJS.Timeout | null = null;\n\n    const initializeStars = () => {\n      if (timeoutId) clearTimeout(timeoutId);\n\n      timeoutId = setTimeout(() => {\n        const rect = container.getBoundingClientRect();\n        if (rect.width > 50 && !starCreationPendingRef.current) {\n          // Update cached dimensions\n          containerSizeRef.current = { width: rect.width, height: rect.height };\n          containerCenterRef.current = {\n            x: rect.width / 2,\n            y: rect.height / 2,\n          };\n          containerRectRef.current = rect;\n\n          starCreationPendingRef.current = true;\n          requestAnimationFrame(() => {\n            createAllStars();\n            starCreationPendingRef.current = false;\n          });\n        }\n      }, 0);\n    };\n\n    const handleResize = () => {\n      if (timeoutId) clearTimeout(timeoutId);\n\n      timeoutId = setTimeout(() => {\n        const rect = container.getBoundingClientRect();\n        if (rect.width > 50) {\n          const oldWidth = containerSizeRef.current.width;\n          const sizeChanged =\n            Math.abs(rect.width - oldWidth) / Math.max(oldWidth, 1) > 0.1;\n\n          if (sizeChanged && !starCreationPendingRef.current) {\n            // Update cached dimensions\n            containerSizeRef.current = {\n              width: rect.width,\n              height: rect.height,\n            };\n            containerCenterRef.current = {\n              x: rect.width / 2,\n              y: rect.height / 2,\n            };\n            containerRectRef.current = rect;\n\n            starCreationPendingRef.current = true;\n            requestAnimationFrame(() => {\n              createAllStars();\n              starCreationPendingRef.current = false;\n            });\n          }\n        }\n      }, 100); // Debounce resize events\n    };\n\n    // Initialize stars immediately\n    initializeStars();\n\n    // Listen for window resize events\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [createAllStars]);\n\n  // --- Highly Optimized Animation Loop with Caching ---\n  const animate = useCallback(\n    (currentTime: number) => {\n      // Frame rate throttling\n      if (currentTime - lastFrameTimeRef.current < FRAME_INTERVAL) {\n        animationFrameRef.current = requestAnimationFrame(animate);\n        return;\n      }\n\n      lastFrameTimeRef.current = currentTime;\n\n      const allStars = allStarsRef.current;\n      const containerRect = containerRectRef.current;\n      const starfield = starfieldRef.current;\n\n      if (\n        !containerRect ||\n        !starfield ||\n        !starsInitializedRef.current ||\n        allStars.length === 0\n      ) {\n        animationFrameRef.current = requestAnimationFrame(animate);\n        return;\n      }\n\n      const mouseX = mousePosRef.current.x;\n      const mouseY = mousePosRef.current.y;\n      const containerCenter = containerCenterRef.current;\n\n      // Clear pending updates array\n      pendingUpdatesRef.current.length = 0;\n\n      // Cache frequently used calculations\n      const relativeMouseX = mouseX - containerRect.left;\n      const relativeMouseY = mouseY - containerRect.top;\n      const mouseOffsetX = relativeMouseX - containerCenter.x;\n      const mouseOffsetY = relativeMouseY - containerCenter.y;\n\n      // Update regular stars with cached calculations\n      const motionMultiplier = reducedMotion ? 0.3 : 1;\n\n      for (let i = 0; i < allStars.length; i++) {\n        const star = allStars[i];\n\n        // Use pre-calculated values\n        const influenceX = Math.max(\n          -1,\n          Math.min(1, mouseOffsetX / star.influenceRangeX),\n        );\n        const influenceY = Math.max(\n          -1,\n          Math.min(1, mouseOffsetY / star.influenceRangeY),\n        );\n        const targetOffsetX =\n          influenceX * star.maxDisplacement * motionMultiplier;\n        const targetOffsetY =\n          influenceY * star.maxDisplacement * motionMultiplier;\n        const targetX = star.originX + targetOffsetX;\n        const targetY = star.originY + targetOffsetY;\n        const diffX = targetX - star.x;\n        const diffY = targetY - star.y;\n        const targetDx = diffX * star.ease;\n        const targetDy = diffY * star.ease;\n\n        star.dx += (targetDx - star.dx) * 0.5;\n        star.dy += (targetDy - star.dy) * 0.5;\n        star.dx *= star.velocityDamping;\n        star.dy *= star.velocityDamping;\n        star.x += star.dx;\n        star.y += star.dy;\n\n        // Optimized twinkle calculation\n        let newOpacity = star.initialOpacity;\n        if (!reducedMotion) {\n          const twinkleAmount = (Math.random() - 0.5) * star.twinkleIntensity;\n          newOpacity = Math.max(\n            star.initialOpacity * star.minOpacityFactor,\n            Math.min(\n              star.initialOpacity * star.maxOpacityFactor,\n              star.initialOpacity + twinkleAmount,\n            ),\n          );\n        }\n\n        // Only update DOM if values changed significantly\n        const xChanged =\n          Math.abs(star.x - (star.lastX || 0)) > SIGNIFICANT_CHANGE_THRESHOLD;\n        const yChanged =\n          Math.abs(star.y - (star.lastY || 0)) > SIGNIFICANT_CHANGE_THRESHOLD;\n        const opacityChanged =\n          Math.abs(newOpacity - (star.lastOpacity || 0)) > 0.01;\n\n        if (xChanged || yChanged || opacityChanged) {\n          const newTransform = `translate(${star.x.toFixed(TRANSFORM_PRECISION)}px, ${star.y.toFixed(TRANSFORM_PRECISION)}px) rotate(45deg)`;\n\n          pendingUpdatesRef.current.push(() => {\n            if (xChanged || yChanged) {\n              star.element.style.transform = newTransform;\n              star.lastTransform = newTransform;\n              star.lastX = star.x;\n              star.lastY = star.y;\n            }\n            if (opacityChanged) {\n              star.element.style.opacity =\n                newOpacity.toFixed(OPACITY_PRECISION);\n              star.lastOpacity = newOpacity;\n            }\n          });\n        }\n      }\n\n      // Apply all DOM updates in a single batch\n      const updates = pendingUpdatesRef.current;\n      for (let i = 0; i < updates.length; i++) {\n        updates[i]();\n      }\n\n      animationFrameRef.current = requestAnimationFrame(animate);\n    },\n    [reducedMotion],\n  );\n\n  // --- Optimized Event Listeners ---\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      const now = Date.now();\n      if (now - lastMouseUpdateRef.current < MOUSE_THROTTLE_MS) return;\n\n      lastMouseUpdateRef.current = now;\n      mousePosRef.current = { x: e.clientX, y: e.clientY };\n    };\n\n    // Use passive listeners for better performance\n    window.addEventListener(\"mousemove\", handleMouseMove, { passive: true });\n\n    // Start animation\n    animationFrameRef.current = requestAnimationFrame(animate);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [animate]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn(\"starry-container\", \"relative overflow-hidden\", className)}\n      style={{\n        width: \"100%\",\n        height: `${height}px`,\n        backgroundColor: backgroundColor,\n      }}\n    >\n      <div ref={starfieldRef} className=\"starfield absolute inset-0\">\n        {/* Stars are added here dynamically */}\n      </div>\n      <div className=\"gradient-fade\"></div>\n    </div>\n  );\n};\n"]}