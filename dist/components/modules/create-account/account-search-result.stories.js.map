{"version":3,"file":"account-search-result.stories.js","sourceRoot":"","sources":["../../../../src/components/modules/create-account/account-search-result.stories.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,uBAAuB,EAAE,MAAM,SAAS,CAAC;AAIlD,MAAM,IAAI,GAAyC;IACjD,KAAK,EAAE,mDAAmD;IAC1D,SAAS,EAAE,uBAAuB;IAClC,IAAI,EAAE,CAAC,UAAU,CAAC;IAClB,UAAU,EAAE;QACV,MAAM,EAAE,UAAU;KACnB;IACD,IAAI,EAAE;QACJ,MAAM,EAAE;YACN,EAAE,EAAE,iBAAiB;YACrB,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,MAAM;SACjB;QACD,SAAS,EAAE,cAAc;KAC1B;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAGpB,MAAM,CAAC,MAAM,OAAO,GAAU,EAAE,CAAC;AAEjC,MAAM,CAAC,MAAM,YAAY,GAAU;IACjC,IAAI,EAAE;QACJ,MAAM,EAAE;YACN,EAAE,EAAE,kBAAkB;YACtB,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,SAAS;YACnB,MAAM,EAAE,KAAK;YACb,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,aAAa;SAC1E;KACF;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAU;IAC7C,IAAI,EAAE;QACJ,MAAM,EAAE;YACN,EAAE,EAAE,kBAAkB;YACtB,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,SAAS;YACnB,MAAM,EAAE,CAAC;YACT,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,aAAa;SAC1E;KACF;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,IAAI,EAAE;QACJ,MAAM,EAAE;YACN,EAAE,EAAE,iBAAiB;YACrB,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,MAAM;SACjB;KACF;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAU;IACnC,MAAM,EAAE,SAAS,cAAc;QAC7B,MAAM,WAAW,GAAG;YAClB;gBACE,EAAE,EAAE,iBAAiB;gBACrB,IAAI,EAAE,YAAY;gBAClB,QAAQ,EAAE,MAAM;aACjB;YACD;gBACE,EAAE,EAAE,iBAAiB;gBACrB,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,QAAQ;gBAClB,MAAM,EAAE,CAAC;aACV;YACD;gBACE,EAAE,EAAE,iBAAiB;gBACrB,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,QAAQ;gBAClB,MAAM,EAAE,KAAK;aACd;YACD;gBACE,EAAE,EAAE,kBAAkB;gBACtB,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,SAAS;gBACnB,MAAM,EAAE,KAAK;aACd;SACmC,CAAC;QAEvC,OAAO,CACL,cAAK,SAAS,EAAC,yCAAyC,YACrD,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAC3B,KAAC,uBAAuB,IAAiB,MAAM,EAAE,MAAM,IAAzB,MAAM,CAAC,EAAE,CAAoB,CAC5D,CAAC,GACE,CACP,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import { AccountSearchResultItem } from \"@/index\";\nimport { AccountSearchResult } from \"@/utils\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\n\nconst meta: Meta<typeof AccountSearchResultItem> = {\n  title: \"Modules/Create Account/Account Search Result Item\",\n  component: AccountSearchResultItem,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"centered\",\n  },\n  args: {\n    result: {\n      id: \"create-new-shin\",\n      type: \"create-new\",\n      username: \"shin\",\n    },\n    className: \"min-w-0 w-96\",\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<typeof AccountSearchResultItem>;\n\nexport const Default: Story = {};\n\nexport const ExistingUser: Story = {\n  args: {\n    result: {\n      id: \"existing-shinobi\",\n      type: \"existing\",\n      username: \"shinobi\",\n      points: 20800,\n      lastOnline: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2 days ago\n    },\n  },\n};\n\nexport const ExistingUserWithNoPoints: Story = {\n  args: {\n    result: {\n      id: \"existing-shinobi\",\n      type: \"existing\",\n      username: \"shinobi\",\n      points: 0,\n      lastOnline: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2 days ago\n    },\n  },\n};\n\nexport const NewUser: Story = {\n  args: {\n    result: {\n      id: \"create-new-shin\",\n      type: \"create-new\",\n      username: \"shin\",\n    },\n  },\n};\n\nexport const MultipleResult: Story = {\n  render: function MultipleResult() {\n    const mockResults = [\n      {\n        id: \"create-new-shin\",\n        type: \"create-new\",\n        username: \"shin\",\n      },\n      {\n        id: \"existing-shinto\",\n        type: \"existing\",\n        username: \"shinto\",\n        points: 0,\n      },\n      {\n        id: \"existing-shints\",\n        type: \"existing\",\n        username: \"shints\",\n        points: 20800,\n      },\n      {\n        id: \"existing-shinobi\",\n        type: \"existing\",\n        username: \"shinobi\",\n        points: 20800,\n      },\n    ] satisfies Array<AccountSearchResult>;\n\n    return (\n      <div className=\"min-w-0 w-96 divide-y divide-spacer-100\">\n        {mockResults.map((result) => (\n          <AccountSearchResultItem key={result.id} result={result} />\n        ))}\n      </div>\n    );\n  },\n};\n"]}