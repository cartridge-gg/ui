{"version":3,"file":"create.js","sourceRoot":"","sources":["../../../../src/components/modules/create-account/create.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAC7B,OAAO,EAAE,MAAM,EAAmB,MAAM,UAAU,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAiB/B,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,CAAC,UAAU,CAI3C,CACE,EACE,aAAa,EACb,UAAU,EACV,KAAK,EACL,SAAS,EACT,SAAS,GAAG,KAAK,EACjB,gBAAgB,EAChB,eAAe,EACf,eAAe,EACf,SAAS,GACV,EACD,GAAG,EACH,EAAE;IACF,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAmB,IAAI,CAAC,CAAC;IAEzD,gDAAgD;IAChD,KAAK,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,OAAQ,CAAC,CAAC;IAE3D,+BAA+B;IAC/B,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,SAAS,IAAI,WAAW,CAAC,OAAO,EAAE,CAAC;YACrC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;IAEhB,OAAO,CACL,eACE,SAAS,EAAE,EAAE,CACX,yEAAyE,EACzE,CAAC,UAAU,CAAC,MAAM,KAAK,SAAS,IAAI,KAAK,CAAC;YACxC,2CAA2C,CAC9C,aAED,KAAC,KAAK,IACJ,GAAG,EAAE,WAAW,EAChB,OAAO,EAAC,UAAU,EAClB,IAAI,EAAC,IAAI,EACT,KAAK,EAAE,aAAa,CAAC,KAAK,EAC1B,UAAU,EAAE,KAAK,EACjB,WAAW,EAAC,UAAU,EACtB,SAAS,EAAC,cAAc,EACxB,OAAO,EAAE,eAAe,EACxB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;oBACd,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;gBACjD,CAAC,EACD,SAAS,EAAE,SAAS,EACpB,SAAS,EAAE,UAAU,CAAC,MAAM,KAAK,YAAY,EAC7C,QAAQ,EAAE,SAAS,EACnB,OAAO,EAAE,eAAe,GACxB,EACF,KAAC,MAAM,IACL,QAAQ,EAAE,aAAa,CAAC,KAAK,EAC7B,UAAU,EAAE,UAAU,EACtB,KAAK,EAAE,KAAK,GACZ,IACE,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,aAAa,CAAC,WAAW,GAAG,eAAe,CAAC;AAE5C,eAAe,aAAa,CAAC","sourcesContent":["import { cn } from \"@/utils\";\nimport { Status, ValidationState } from \"./status\";\nimport { Input } from \"@/index\";\nimport * as React from \"react\";\n\ntype CreateAccountProps = {\n  usernameField: {\n    value: string;\n    error?: Error;\n  };\n  validation: ValidationState;\n  error?: Error;\n  isLoading: boolean;\n  autoFocus?: boolean;\n  onUsernameChange: (value: string) => void;\n  onUsernameFocus: () => void;\n  onUsernameClear: () => void;\n  onKeyDown: (e: React.KeyboardEvent) => void;\n};\n\nexport const CreateAccount = React.forwardRef<\n  HTMLInputElement,\n  CreateAccountProps\n>(\n  (\n    {\n      usernameField,\n      validation,\n      error,\n      isLoading,\n      autoFocus = false,\n      onUsernameChange,\n      onUsernameFocus,\n      onUsernameClear,\n      onKeyDown,\n    },\n    ref,\n  ) => {\n    const internalRef = React.useRef<HTMLInputElement>(null);\n\n    // Use imperative handle to expose the input ref\n    React.useImperativeHandle(ref, () => internalRef.current!);\n\n    // Handle auto-focus internally\n    React.useEffect(() => {\n      if (autoFocus && internalRef.current) {\n        internalRef.current.focus();\n      }\n    }, [autoFocus]);\n\n    return (\n      <div\n        className={cn(\n          \"flex flex-col border rounded-md border-background-300 bg-background-300\",\n          (validation.status === \"invalid\" || error) &&\n            \"bg-destructive-100 border-destructive-100\",\n        )}\n      >\n        <Input\n          ref={internalRef}\n          variant=\"username\"\n          size=\"lg\"\n          value={usernameField.value}\n          spellCheck={false}\n          placeholder=\"Username\"\n          className=\"relative z-1\"\n          onFocus={onUsernameFocus}\n          onChange={(e) => {\n            onUsernameChange(e.target.value.toLowerCase());\n          }}\n          onKeyDown={onKeyDown}\n          isLoading={validation.status === \"validating\"}\n          disabled={isLoading}\n          onClear={onUsernameClear}\n        />\n        <Status\n          username={usernameField.value}\n          validation={validation}\n          error={error}\n        />\n      </div>\n    );\n  },\n);\n\nCreateAccount.displayName = \"CreateAccount\";\n\nexport default CreateAccount;\n"]}