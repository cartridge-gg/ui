{"version":3,"file":"token-select.js","sourceRoot":"","sources":["../../../../../src/components/modules/erc20/select/token-select.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,gCAAgC,CAAC;AACvE,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,iBAAiB,EAAE,MAAM,UAAU,CAAC;AAC7C,OAAO,EAAE,cAAc,EAAE,MAAM,OAAO,CAAC;AACvC,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AA2B7B,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,EAC1B,MAAM,EACN,YAAY,EACZ,QAAQ,EACR,GAAG,KAAK,EAC+C,EAAE,EAAE;IAC3D,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,QAAQ,CAC9C,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC,CAC1B,CAAC;IAEF,MAAM,iBAAiB,GAAG,CAAC,OAAe,EAAE,EAAE;QAC5C,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAC/B,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,KAAK,OAAO,CAC9C,CAAC;QACF,IAAI,aAAa,EAAE,CAAC;YAClB,QAAQ,CAAC,aAAa,CAAC,CAAC;YACxB,eAAe,CAAC,aAAa,CAAC,CAAC;QACjC,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,MAAC,MAAM,OACD,KAAK,EACT,KAAK,EAAE,YAAY,CAAC,QAAQ,CAAC,OAAO,EACpC,aAAa,EAAE,iBAAiB,EAChC,YAAY,EAAE,YAAY,CAAC,QAAQ,CAAC,OAAO,aAE3C,KAAC,iBAAiB,KAAG,EACrB,KAAC,aAAa,IAAC,iBAAiB,EAAC,OAAO,YACrC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CACxB,KAAC,cAAc,IAEb,KAAK,EAAE,KAAK,EACZ,YAAY,EAAE,YAAY,EAC1B,SAAS,EAAE,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,CAAC,IAHjD,KAAK,CAAC,QAAQ,CAAC,OAAO,CAI3B,CACH,CAAC,GACY,IACT,CACV,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Select, SelectContent } from \"@/components/primitives/select\";\nimport { useState } from \"react\";\nimport { TokenSelectHeader } from \"./header\";\nimport { TokenSelectRow } from \"./row\";\nimport { cn } from \"@/utils\";\n\nexport type Balance = {\n  amount: number;\n  value: number;\n  change: number;\n};\n\nexport type ERC20Metadata = {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n  image: string | undefined;\n};\n\nexport type Token = {\n  balance: Balance;\n  metadata: ERC20Metadata;\n};\n\ninterface TokenSelectProps {\n  tokens: Token[];\n  defaultToken?: Token;\n  onSelect: (token: Token) => void;\n}\n\nexport const TokenSelect = ({\n  tokens,\n  defaultToken,\n  onSelect,\n  ...props\n}: TokenSelectProps & React.ComponentProps<typeof Select>) => {\n  const [currentToken, setCurrentToken] = useState<Token>(\n    defaultToken || tokens[0],\n  );\n\n  const handleChangeToken = (address: string) => {\n    const selectedToken = tokens.find(\n      (token) => token.metadata.address === address,\n    );\n    if (selectedToken) {\n      onSelect(selectedToken);\n      setCurrentToken(selectedToken);\n    }\n  };\n\n  return (\n    <Select\n      {...props}\n      value={currentToken.metadata.address}\n      onValueChange={handleChangeToken}\n      defaultValue={currentToken.metadata.address}\n    >\n      <TokenSelectHeader />\n      <SelectContent viewPortClassName=\"gap-0\">\n        {tokens.map((token, i) => (\n          <TokenSelectRow\n            key={token.metadata.address}\n            token={token}\n            currentToken={currentToken}\n            className={cn(i === tokens.length - 1 && \"border-b-0\")}\n          />\n        ))}\n      </SelectContent>\n    </Select>\n  );\n};\n"]}