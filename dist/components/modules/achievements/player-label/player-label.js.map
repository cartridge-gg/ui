{"version":3,"file":"player-label.js","sourceRoot":"","sources":["../../../../../src/components/modules/achievements/player-label/player-label.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AAC/E,OAAO,EAAE,sBAAsB,EAAE,MAAM,SAAS,CAAC;AACjD,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAC7B,OAAO,EAAE,GAAG,EAAgB,MAAM,0BAA0B,CAAC;AAC7D,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAUhC,MAAM,8BAA8B,GAAG,GAAG,CAAC,2BAA2B,EAAE;IACtE,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SACV;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;SACX;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE,SAAS;KAChB;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,EACrC,QAAQ,EACR,OAAO,EACP,IAAI,EACJ,OAAO,EACP,IAAI,EACJ,SAAS,EACT,GAAG,KAAK,EACoB,EAAE,EAAE;IAChC,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE;QAC3B,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,MAAM;gBACT,OAAO,KAAC,WAAW,IAAC,IAAI,EAAC,IAAI,GAAG,CAAC;YACnC,KAAK,QAAQ;gBACX,OAAO,KAAC,aAAa,IAAC,IAAI,EAAC,IAAI,GAAG,CAAC;YACrC,KAAK,QAAQ;gBACX,OAAO,KAAC,aAAa,IAAC,IAAI,EAAC,IAAI,GAAG,CAAC;YACrC,KAAK,SAAS,CAAC;YACf;gBACE,OAAO,IAAI,CAAC;QAChB,CAAC;IACH,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAEX,OAAO,CACL,eACE,SAAS,EAAE,EAAE,CAAC,8BAA8B,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,CAAC,KACjE,KAAK,aAET,KAAC,sBAAsB,IACrB,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,QAAQ,GAClB,EACF,eAAK,SAAS,EAAC,yBAAyB,aACtC,eAAK,SAAS,EAAC,2BAA2B,aACxC,YAAG,SAAS,EAAC,kDAAkD,YAC5D,QAAQ,GACP,EACH,OAAO,IACJ,EACN,KAAC,WAAW,IAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,IAAI,GAAG,IACvC,IACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import { CopyAddress } from \"@/components/copy-address\";\nimport { BronzeTagIcon, GoldTagIcon, SilverTagIcon } from \"@/components/icons\";\nimport { AchievementPlayerBadge } from \"@/index\";\nimport { cn } from \"@/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport { useMemo } from \"react\";\n\nexport interface AchievementPlayerLabelProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof achievementPlayerLabelVariants> {\n  username: string;\n  address: string;\n  icon?: string;\n}\n\nconst achievementPlayerLabelVariants = cva(\"flex items-center gap-x-4\", {\n  variants: {\n    variant: {\n      darkest: \"\",\n      darker: \"\",\n      dark: \"\",\n      default: \"\",\n      light: \"\",\n      lighter: \"\",\n      lightest: \"\",\n      ghost: \"\",\n    },\n    rank: {\n      default: \"\",\n      gold: \"\",\n      silver: \"\",\n      bronze: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    rank: \"default\",\n  },\n});\n\nexport const AchievementPlayerLabel = ({\n  username,\n  address,\n  icon,\n  variant,\n  rank,\n  className,\n  ...props\n}: AchievementPlayerLabelProps) => {\n  const TagIcon = useMemo(() => {\n    switch (rank) {\n      case \"gold\":\n        return <GoldTagIcon size=\"sm\" />;\n      case \"silver\":\n        return <SilverTagIcon size=\"sm\" />;\n      case \"bronze\":\n        return <BronzeTagIcon size=\"sm\" />;\n      case \"default\":\n      default:\n        return null;\n    }\n  }, [rank]);\n\n  return (\n    <div\n      className={cn(achievementPlayerLabelVariants({ variant }), className)}\n      {...props}\n    >\n      <AchievementPlayerBadge\n        icon={icon}\n        variant={variant}\n        rank={rank}\n        username={username}\n      />\n      <div className=\"flex flex-col gap-y-0.5\">\n        <div className=\"flex items-center gap-x-2\">\n          <p className=\"text-lg/[22px] font-semibold text-foreground-100\">\n            {username}\n          </p>\n          {TagIcon}\n        </div>\n        <CopyAddress address={address} size=\"xs\" />\n      </div>\n    </div>\n  );\n};\n\nexport default AchievementPlayerLabel;\n"]}