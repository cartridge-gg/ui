{"version":3,"file":"tabs.js","sourceRoot":"","sources":["../../../../../src/components/modules/achievements/tabs/tabs.tsx"],"names":[],"mappings":";AAAA,OAAO,EACL,IAAI,EACJ,QAAQ,EACR,cAAc,EACd,kBAAkB,EAClB,kBAAkB,GACnB,MAAM,SAAS,CAAC;AACjB,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAW9C,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,EAC9B,KAAK,EACL,KAAK,EACL,IAAI,EACJ,KAAK,EACL,SAAS,EACT,QAAQ,EACR,aAAa,GACQ,EAAE,EAAE;IACzB,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;IACrD,MAAM,YAAY,GAAG,WAAW,CAC9B,CAAC,KAAa,EAAE,EAAE;QAChB,SAAS,CAAC,KAAK,CAAC,CAAC;QACjB,aAAa,EAAE,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC,EACD,CAAC,SAAS,EAAE,aAAa,CAAC,CAC3B,CAAC;IAEF,OAAO,CACL,MAAC,IAAI,IAAC,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,YAAY,aACnE,MAAC,QAAQ,IAAC,SAAS,EAAC,6DAA6D,aAC/E,KAAC,cAAc,IACb,KAAK,EAAC,cAAc,EACpB,KAAK,EAAC,cAAc,EACpB,OAAO,EACL,KAAC,kBAAkB,IACjB,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,MAAM,KAAK,cAAc,GACjC,EAEJ,MAAM,EAAE,MAAM,KAAK,cAAc,GACjC,EACF,KAAC,cAAc,IACb,KAAK,EAAC,aAAa,EACnB,KAAK,EAAC,aAAa,EACnB,OAAO,EAAE,KAAC,kBAAkB,IAAC,IAAI,EAAE,IAAI,GAAI,EAC3C,MAAM,EAAE,MAAM,KAAK,aAAa,GAChC,IACO,EACV,QAAQ,IACJ,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import {\n  Tabs,\n  TabsList,\n  AchievementTab,\n  AchievementCounter,\n  LeaderboardCounter,\n} from \"@/index\";\nimport { useCallback, useState } from \"react\";\n\nexport interface AchievementTabsProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  count: number;\n  total: number;\n  rank: number;\n  value?: string;\n  onValueChange?: (value: string) => void;\n}\n\nexport const AchievementTabs = ({\n  count,\n  total,\n  rank,\n  value,\n  className,\n  children,\n  onValueChange,\n}: AchievementTabsProps) => {\n  const [active, setActive] = useState(\"achievements\");\n  const handleChange = useCallback(\n    (value: string) => {\n      setActive(value);\n      onValueChange?.(value);\n    },\n    [setActive, onValueChange],\n  );\n\n  return (\n    <Tabs className={className} value={value} onValueChange={handleChange}>\n      <TabsList className=\"h-[45px] grid w-full grid-cols-2 gap-x-4 bg-transparent p-0\">\n        <AchievementTab\n          value=\"achievements\"\n          label=\"Achievements\"\n          counter={\n            <AchievementCounter\n              count={count}\n              total={total}\n              active={active === \"achievements\"}\n            />\n          }\n          active={active === \"achievements\"}\n        />\n        <AchievementTab\n          value=\"leaderboard\"\n          label=\"Leaderboard\"\n          counter={<LeaderboardCounter rank={rank} />}\n          active={active === \"leaderboard\"}\n        />\n      </TabsList>\n      {children}\n    </Tabs>\n  );\n};\n\nexport default AchievementTabs;\n"]}