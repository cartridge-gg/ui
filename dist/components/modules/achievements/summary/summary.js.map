{"version":3,"file":"summary.js","sourceRoot":"","sources":["../../../../../src/components/modules/achievements/summary/summary.tsx"],"names":[],"mappings":";AAAA,OAAO,EAEL,gBAAgB,EAEhB,mBAAmB,EACnB,IAAI,EACJ,WAAW,GAGZ,MAAM,SAAS,CAAC;AACjB,OAAO,EAAE,GAAG,EAAgB,MAAM,0BAA0B,CAAC;AAC7D,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAgBhC,MAAM,0BAA0B,GAAG,GAAG,CAAC,2BAA2B,EAAE;IAClE,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SACV;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;KACnB;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,EACjC,YAAY,EACZ,QAAQ,EACR,OAAO,EACP,MAAM,EACN,SAAS,EACT,KAAK,EACL,OAAO,GACiB,EAAE,EAAE;IAC5B,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,GAAG,EAAE;QACrC,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACzB,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;gBACtD,MAAM,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC3B,KAAK,EAAE,CAAC;YACV,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;IAC3B,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IAEnB,OAAO,CACL,MAAC,IAAI,IAAC,SAAS,EAAE,0BAA0B,CAAC,EAAE,OAAO,EAAE,CAAC,aACtD,KAAC,gBAAgB,IACf,YAAY,EAAE,YAAY,EAC1B,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,OAAO,EAAE,OAAO,EAChB,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,KAAK,GACZ,EACF,KAAC,WAAW,IAAC,SAAS,EAAC,KAAK,YAC1B,KAAC,mBAAmB,IAClB,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,YAAY,CAAC,MAAM,EAC1B,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,OAAO,EAChB,SAAS,QACT,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,KAAK,GACZ,GACU,IACT,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["import {\n  AchievementContentProps,\n  ArcadeGameHeader,\n  AchievementPinProps,\n  AchievementProgress,\n  Card,\n  CardContent,\n  Metadata,\n  Socials,\n} from \"@/index\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport { useMemo } from \"react\";\n\nexport interface AchievementSummaryProps\n  extends VariantProps<typeof achievementSummaryVariants> {\n  achievements: {\n    id: string;\n    content: AchievementContentProps;\n    pin?: AchievementPinProps;\n  }[];\n  metadata: Metadata;\n  socials?: Socials;\n  active?: boolean;\n  className?: string;\n  color?: string;\n}\n\nconst achievementSummaryVariants = cva(\"border border-transparent\", {\n  variants: {\n    variant: {\n      darkest: \"\",\n      darker: \"\",\n      dark: \"\",\n      default: \"\",\n      light: \"\",\n      lighter: \"\",\n      lightest: \"\",\n      ghost: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n});\n\nexport const AchievementSummary = ({\n  achievements,\n  metadata,\n  socials,\n  active,\n  className,\n  color,\n  variant,\n}: AchievementSummaryProps) => {\n  const { points, count } = useMemo(() => {\n    let points = 0;\n    let count = 0;\n    achievements.forEach((a) => {\n      if (a.content.tasks?.every((t) => t.count >= t.total)) {\n        points += a.content.points;\n        count++;\n      }\n    });\n    return { points, count };\n  }, [achievements]);\n\n  return (\n    <Card className={achievementSummaryVariants({ variant })}>\n      <ArcadeGameHeader\n        achievements={achievements}\n        metadata={metadata}\n        socials={socials}\n        variant={variant}\n        active={active}\n        className={className}\n        color={color}\n      />\n      <CardContent className=\"p-0\">\n        <AchievementProgress\n          count={count}\n          total={achievements.length}\n          points={points}\n          variant={variant}\n          completed\n          className={className}\n          color={color}\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AchievementSummary;\n"]}