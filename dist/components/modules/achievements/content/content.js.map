{"version":3,"file":"content.js","sourceRoot":"","sources":["../../../../../src/components/modules/achievements/content/content.tsx"],"names":[],"mappings":";AAAA,OAAO,EACL,gBAAgB,EAChB,eAAe,EAEf,WAAW,GACZ,MAAM,SAAS,CAAC;AACjB,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAahC,MAAM,UAAU,kBAAkB,CAAC,EACjC,MAAM,EACN,UAAU,EACV,IAAI,EACJ,KAAK,EACL,WAAW,EACX,KAAK,EACL,SAAS,EACT,MAAM,GACkB;IACxB,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,EAAE;QAC7B,OAAO,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEZ,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE;QACxB,OAAO,SAAS,IAAI,CAAC,MAAM,CAAC;IAC9B,CAAC,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;IAExB,OAAO,CACL,MAAC,WAAW,IAAC,SAAS,EAAC,mCAAmC,aACxD,KAAC,gBAAgB,IACf,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,oBAAoB,EAClD,MAAM,EAAE,MAAM,EACd,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,SAAS,EACpB,SAAS,EAAE,SAAS,GACpB,EACD,IAAI,IAAI,YAAG,SAAS,EAAC,6BAA6B,YAAE,WAAW,GAAK,EACpE,IAAI;gBACH,KAAK;gBACL,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAClB,KAAC,eAAe,IAAe,SAAS,EAAE,SAAS,KAAM,IAAI,IAAvC,IAAI,CAAC,EAAE,CAAoC,CAClE,CAAC,IACQ,CACf,CAAC;AACJ,CAAC;AAED,eAAe,kBAAkB,CAAC","sourcesContent":["import {\n  AchievementLabel,\n  AchievementTask,\n  AchievementTaskProps,\n  CardContent,\n} from \"@/index\";\nimport { useMemo } from \"react\";\n\nexport interface AchievementContentProps {\n  points: number;\n  difficulty: number;\n  hidden: boolean;\n  icon?: string;\n  title?: string;\n  description?: string;\n  tasks?: (AchievementTaskProps & { id: string })[];\n  timestamp?: number;\n}\n\nexport function AchievementContent({\n  points,\n  difficulty,\n  icon,\n  title,\n  description,\n  tasks,\n  timestamp,\n  hidden,\n}: AchievementContentProps) {\n  const completed = useMemo(() => {\n    return tasks && tasks.every((task) => task.count >= task.total);\n  }, [tasks]);\n\n  const show = useMemo(() => {\n    return completed || !hidden;\n  }, [hidden, completed]);\n\n  return (\n    <CardContent className=\"grow w-full flex flex-col gap-y-3\">\n      <AchievementLabel\n        icon={icon}\n        title={show ? (title ?? \"\") : \"Hidden Achievement\"}\n        points={points}\n        difficulty={difficulty}\n        timestamp={timestamp}\n        completed={completed}\n      />\n      {show && <p className=\"text-foreground-300 text-xs\">{description}</p>}\n      {show &&\n        tasks &&\n        tasks.map((task) => (\n          <AchievementTask key={task.id} completed={completed} {...task} />\n        ))}\n    </CardContent>\n  );\n}\n\nexport default AchievementContent;\n"]}