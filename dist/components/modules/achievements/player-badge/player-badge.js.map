{"version":3,"file":"player-badge.js","sourceRoot":"","sources":["../../../../../src/components/modules/achievements/player-badge/player-badge.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  BronzeIcon,\n  DefaultIcon,\n  GoldIcon,\n  SilverIcon,\n} from \"@/components/icons\";\nimport { AchievementPlayerAvatar, Thumbnail } from \"@/index\";\nimport { cn } from \"@/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport { HTMLAttributes, useMemo } from \"react\";\n\nexport interface AchievementPlayerBadgeProps\n  extends HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof achievementPlayerBadgeVariants> {\n  username?: string;\n  icon?: React.ReactNode;\n}\n\nexport const achievementPlayerBadgeVariants = cva(\n  \"relative flex justify-center items-center h-12 w-12\",\n  {\n    variants: {\n      variant: {\n        darkest: \"\",\n        darker: \"\",\n        dark: \"\",\n        default: \"\",\n        light: \"\",\n        lighter: \"\",\n        lightest: \"\",\n        ghost: \"\",\n      },\n      rank: {\n        default: \"\",\n        gold: \"\",\n        silver: \"\",\n        bronze: \"\",\n      },\n      size: {\n        xl: \"\",\n        \"2xl\": \"\",\n        \"3xl\": \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"xl\",\n    },\n  },\n);\n\nexport const AchievementPlayerBadge = ({\n  username,\n  icon,\n  variant,\n  rank,\n  size,\n  className,\n  children,\n  ...props\n}: AchievementPlayerBadgeProps) => {\n  const BadgeIcon = useMemo(() => {\n    switch (rank) {\n      case \"gold\":\n        return (\n          <GoldIcon className=\"absolute text-primary\" size={size ?? \"xl\"} />\n        );\n      case \"silver\":\n        return (\n          <SilverIcon className=\"absolute text-primary\" size={size ?? \"xl\"} />\n        );\n      case \"bronze\":\n        return (\n          <BronzeIcon className=\"absolute text-primary\" size={size ?? \"xl\"} />\n        );\n      case \"default\":\n      default:\n        return (\n          <DefaultIcon className=\"absolute text-primary\" size={size ?? \"xl\"} />\n        );\n    }\n  }, [rank, size]);\n\n  const ThumbnailIcon = useMemo(() => {\n    if (icon) return icon;\n    return (\n      <AchievementPlayerAvatar\n        username={username ?? \"\"}\n        className=\"h-full w-full\"\n      />\n    );\n  }, [icon, username]);\n\n  return (\n    <div\n      className={cn(\n        achievementPlayerBadgeVariants({ variant, rank }),\n        className,\n      )}\n      {...props}\n    >\n      <Thumbnail\n        icon={ThumbnailIcon}\n        variant={variant}\n        size={size === \"3xl\" ? \"xl\" : size === \"2xl\" ? \"lg\" : \"md\"}\n        className=\"rounded-full\"\n        centered\n        rounded\n      />\n      {BadgeIcon}\n      {children}\n    </div>\n  );\n};\n\nexport default AchievementPlayerBadge;\n"]}