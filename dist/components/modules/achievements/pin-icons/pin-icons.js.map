{"version":3,"file":"pin-icons.js","sourceRoot":"","sources":["../../../../../src/components/modules/achievements/pin-icons/pin-icons.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAgB,MAAM,0BAA0B,CAAC;AAC7D,OAAO,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAC;AAEjD,MAAM,uBAAuB,GAAG,GAAG,CAAC,2BAA2B,EAAE;IAC/D,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;YACX,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SACV;QACD,IAAI,EAAE;YACJ,EAAE,EAAE,EAAE;YACN,OAAO,EAAE,EAAE;YACX,EAAE,EAAE,EAAE;SACP;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE,SAAS;KAChB;CACF,CAAC,CAAC;AAUH,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,EAClC,IAAI,EACJ,KAAK,EACL,OAAO,EACP,IAAI,EACJ,SAAS,EACT,KAAK,GACoB,EAAE,EAAE;IAC7B,OAAO,CACL,eAAK,SAAS,EAAE,uBAAuB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,aACvD,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CACnB,KAAC,kBAAkB,IAEjB,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,KAAK,IANP,KAAK,CAAC,EAAE,CAOb,CACH,CAAC,EACD,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CACzD,KAAC,kBAAkB,IAEjB,KAAK,QACL,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,SAAS,IALf,KAAK,CAMV,CACH,CAAC,IACE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,mBAAmB,CAAC","sourcesContent":["import { cva, VariantProps } from \"class-variance-authority\";\nimport { AchievementPinIcon } from \"../pin-icon\";\n\nconst achievementPinsVariants = cva(\"flex items-center gap-1.5\", {\n  variants: {\n    variant: {\n      darkest: \"\",\n      darker: \"\",\n      dark: \"\",\n      default: \"\",\n      light: \"\",\n      lighter: \"\",\n      lightest: \"\",\n      ghost: \"\",\n    },\n    size: {\n      xs: \"\",\n      default: \"\",\n      md: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"default\",\n  },\n});\n\nexport interface AchievementPinIconsProps\n  extends VariantProps<typeof achievementPinsVariants> {\n  pins: { id: string; icon: string }[];\n  theme?: boolean;\n  className?: string;\n  color?: string;\n}\n\nexport const AchievementPinIcons = ({\n  pins,\n  theme,\n  variant,\n  size,\n  className,\n  color,\n}: AchievementPinIconsProps) => {\n  return (\n    <div className={achievementPinsVariants({ variant, size })}>\n      {pins.map((value) => (\n        <AchievementPinIcon\n          key={value.id}\n          icon={value.icon}\n          variant={variant}\n          size={size}\n          theme={theme}\n          className={className}\n          color={color}\n        />\n      ))}\n      {Array.from({ length: 3 - pins.length }).map((_, index) => (\n        <AchievementPinIcon\n          key={index}\n          empty\n          variant={variant}\n          size={size}\n          theme={false}\n          className={className}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default AchievementPinIcons;\n"]}