{"version":3,"file":"pin-icons.stories.js","sourceRoot":"","sources":["../../../../../src/components/modules/achievements/pin-icons/pin-icons.stories.tsx"],"names":[],"mappings":";AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAElD,MAAM,IAAI,GAAqC;IAC7C,KAAK,EAAE,gCAAgC;IACvC,SAAS,EAAE,mBAAmB;IAC9B,IAAI,EAAE,CAAC,UAAU,CAAC;IAClB,UAAU,EAAE;QACV,MAAM,EAAE,QAAQ;KACjB;IACD,IAAI,EAAE;QACJ,IAAI,EAAE;YACJ;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,aAAa;aACpB;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,WAAW;aAClB;SACF;KACF;CACF,CAAC;AAEF,eAAe,IAAI,CAAC;AAGpB,MAAM,QAAQ,GAAG;IACf,SAAS;IACT,QAAQ;IACR,MAAM;IACN,SAAS;IACT,OAAO;IACP,SAAS;IACT,UAAU;IACV,OAAO;CACC,CAAC;AACX,MAAM,KAAK,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAU,CAAC;AAE/C,MAAM,CAAC,MAAM,OAAO,GAAU;IAC5B,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAChB,cAAK,SAAS,EAAC,qBAAqB,YACjC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CACzB,eAAmB,SAAS,EAAC,+BAA+B,aAC1D,YAAG,SAAS,EAAC,oDAAoD,YAC9D,OAAO,GACN,EACH,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACnB,KAAC,mBAAmB,IAElB,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,KACN,IAAI,IAHH,GAAG,OAAO,IAAI,IAAI,EAAE,CAIzB,CACH,CAAC,KAXM,OAAO,CAYX,CACP,CAAC,GACE,CACP;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAU;IAC1B,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAChB,cAAK,SAAS,EAAC,qBAAqB,YACjC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CACzB,eAAmB,SAAS,EAAC,+BAA+B,aAC1D,YAAG,SAAS,EAAC,oDAAoD,YAC9D,OAAO,GACN,EACH,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACnB,KAAC,mBAAmB,IAElB,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,EACV,KAAK,WACD,IAAI,IAJH,GAAG,OAAO,IAAI,IAAI,EAAE,CAKzB,CACH,CAAC,KAZM,OAAO,CAaX,CACP,CAAC,GACE,CACP;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAU;IAC1B,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAChB,cAAK,SAAS,EAAC,qBAAqB,YACjC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CACzB,eAAmB,SAAS,EAAC,+BAA+B,aAC1D,YAAG,SAAS,EAAC,oDAAoD,YAC9D,OAAO,GACN,EACH,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACnB,KAAC,mBAAmB,IAElB,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,EACV,KAAK,EAAC,SAAS,KACX,IAAI,IAJH,GAAG,OAAO,IAAI,IAAI,EAAE,CAKzB,CACH,CAAC,KAZM,OAAO,CAaX,CACP,CAAC,GACE,CACP;CACF,CAAC","sourcesContent":["import type { Meta, StoryObj } from \"@storybook/react\";\nimport { AchievementPinIcons } from \"./pin-icons\";\n\nconst meta: Meta<typeof AchievementPinIcons> = {\n  title: \"Modules/Achievements/Pin Icons\",\n  component: AchievementPinIcons,\n  tags: [\"autodocs\"],\n  parameters: {\n    layout: \"padded\",\n  },\n  args: {\n    pins: [\n      {\n        id: \"1\",\n        icon: \"fa-seedling\",\n      },\n      {\n        id: \"2\",\n        icon: \"fa-swords\",\n      },\n    ],\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<typeof AchievementPinIcons>;\n\nconst variants = [\n  \"darkest\",\n  \"darker\",\n  \"dark\",\n  \"default\",\n  \"light\",\n  \"lighter\",\n  \"lightest\",\n  \"ghost\",\n] as const;\nconst sizes = [\"xs\", \"default\", \"md\"] as const;\n\nexport const Default: Story = {\n  render: (args) => (\n    <div className=\"flex flex-col gap-3\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"grid grid-cols-4 items-center\">\n          <p className=\"text-sm text-foreground-100 capitalize text-medium\">\n            {variant}\n          </p>\n          {sizes.map((size) => (\n            <AchievementPinIcons\n              key={`${variant}-${size}`}\n              variant={variant}\n              size={size}\n              {...args}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  ),\n};\n\nexport const Theme: Story = {\n  render: (args) => (\n    <div className=\"flex flex-col gap-3\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"grid grid-cols-4 items-center\">\n          <p className=\"text-sm text-foreground-100 capitalize text-medium\">\n            {variant}\n          </p>\n          {sizes.map((size) => (\n            <AchievementPinIcons\n              key={`${variant}-${size}`}\n              variant={variant}\n              size={size}\n              theme\n              {...args}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  ),\n};\n\nexport const Color: Story = {\n  render: (args) => (\n    <div className=\"flex flex-col gap-3\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"grid grid-cols-4 items-center\">\n          <p className=\"text-sm text-foreground-100 capitalize text-medium\">\n            {variant}\n          </p>\n          {sizes.map((size) => (\n            <AchievementPinIcons\n              key={`${variant}-${size}`}\n              variant={variant}\n              size={size}\n              color=\"#ff00ff\"\n              {...args}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  ),\n};\n"]}