{"version":3,"file":"content.js","sourceRoot":"","sources":["../../../../../src/components/modules/connection/tooltip-content/content.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  AchievementPlayerBadge,\n  Button,\n  CopyIcon,\n  GlobeIcon,\n  SlotIcon,\n  StarknetColorIcon,\n  StarknetIcon,\n  Thumbnail,\n  useUI,\n} from \"@/index\";\nimport { cn, formatAddress, getChainName, isSlotChain } from \"@/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport { HTMLAttributes, useCallback, useMemo } from \"react\";\nimport { constants, getChecksumAddress } from \"starknet\";\nimport { toast } from \"sonner\";\nimport { useLayoutContext } from \"@/components/layout/context\";\nimport QrCodeIcon from \"@/components/icons/utility/qr-code\";\n\nexport const connectionTooltipContentVariants = cva(\n  \"select-none flex flex-col gap-2 p-4 rounded-lg shadow-[0px_4px_4px_0px_rgba(0,0,0,0.25)]\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background-150\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface ConnectionTooltipContentProps\n  extends HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof connectionTooltipContentVariants> {\n  username: string;\n  address: string;\n  chainId: string;\n  followers?: number;\n  followings?: number;\n  hideNetwork?: boolean;\n  setOpen?: (open: boolean) => void;\n  onFollowersClick?: () => void;\n  onFollowingsClick?: () => void;\n  onOpenSettings?: () => void;\n  onLogout?: () => void;\n}\n\nexport const ConnectionTooltipContent = ({\n  username,\n  address,\n  chainId,\n  followers,\n  followings,\n  hideNetwork,\n  setOpen,\n  onFollowersClick,\n  onFollowingsClick,\n  onOpenSettings,\n  onLogout,\n  variant,\n  className,\n}: ConnectionTooltipContentProps) => {\n  const { setWithBackground } = useLayoutContext();\n  const { showQrCode } = useUI();\n\n  const Icon = useMemo(() => {\n    switch (chainId) {\n      case constants.StarknetChainId.SN_MAIN:\n        return <StarknetColorIcon className=\"scale-[1.33]\" />;\n      case constants.StarknetChainId.SN_SEPOLIA:\n        return <StarknetIcon className=\"scale-150\" />;\n      default:\n        return isSlotChain(chainId) ? (\n          <SlotIcon className=\"scale-150\" />\n        ) : (\n          <GlobeIcon variant=\"solid\" className=\"scale-150\" />\n        );\n    }\n  }, [chainId]);\n\n  const onCopy = useCallback(() => {\n    navigator.clipboard.writeText(getChecksumAddress(address));\n    toast.success(\"Address copied\");\n    setWithBackground(false);\n    if (setOpen) setOpen(false);\n  }, [address, setOpen, setWithBackground]);\n\n  const formattedAddress = useMemo(\n    () =>\n      formatAddress(getChecksumAddress(address), {\n        first: 4,\n        last: 4,\n        size: \"xs\",\n      }),\n    [address],\n  );\n\n  const handleShowQrCode = useCallback(() => {\n    if (!showQrCode) return;\n    setOpen?.(false);\n    setWithBackground(false);\n    showQrCode(true);\n  }, [showQrCode, setOpen, setWithBackground]);\n\n  const handleOpenSettings = useCallback(() => {\n    if (!onOpenSettings) return;\n    setOpen?.(false);\n    setWithBackground(false);\n    onOpenSettings();\n  }, [onOpenSettings, setOpen, setWithBackground]);\n\n  const handleLogout = useCallback(() => {\n    if (!onLogout) return;\n    setOpen?.(false);\n    setWithBackground(false);\n    onLogout();\n  }, [onLogout, setOpen, setWithBackground]);\n\n  return (\n    <div\n      className={cn(\n        connectionTooltipContentVariants({ variant }),\n        className,\n        \"relative\",\n      )}\n    >\n      <div className=\"flex items-start w-full gap-3 justify-between\">\n        <div className=\"flex items-center gap-3\">\n          <AchievementPlayerBadge username={username} size=\"xl\" />\n          <p className=\"text-lg/[22px] font-semibold\">{username}</p>\n        </div>\n        {address && (\n          <div\n            onClick={handleShowQrCode}\n            className=\" absolute flex top-4 right-4 items-center gap-3 w-10 h-10 bg-background-200 rounded-full justify-center cursor-pointer hover:bg-background-300 transition-all\"\n          >\n            <QrCodeIcon />\n          </div>\n        )}\n      </div>\n      <div className=\"flex flex-col gap-px bg-background-200\">\n        <div className=\"flex items-center justify-between gap-2 px-2 py-2.5 bg-background-150\">\n          <p className=\"text-sm text-foreground-400 select-none\">Address:</p>\n          <div onClick={() => setOpen?.(false)}>\n            <div\n              className=\"flex items-center gap-1 cursor-pointer text-foreground-300 hover:text-foreground-200\"\n              onClick={onCopy}\n            >\n              <p className=\"text-sm font-mono font-normal\">\n                {formattedAddress}\n              </p>\n              <CopyIcon size=\"sm\" />\n            </div>\n          </div>\n        </div>\n        <div\n          className={cn(\n            \"flex items-center justify-between gap-2 px-2 py-2.5 bg-background-150\",\n            hideNetwork && \"hidden\",\n          )}\n        >\n          <p className=\"text-sm text-foreground-400 select-none\">Network:</p>\n          <div className=\"flex items-center gap-1.5\">\n            <Thumbnail size=\"xs\" icon={Icon} rounded />\n            <p className=\"text-sm font-normal capitalize\">\n              {getChainName(chainId).toLowerCase()}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div\n        className={cn(\n          \"flex items-center justify-between gap-3\",\n          (followers === undefined || followings === undefined) && \"hidden\",\n        )}\n      >\n        <Button\n          variant=\"secondary\"\n          className=\"w-1/2 h-9 normal-case font-sans gap-1\"\n          disabled={!onFollowersClick}\n          onClick={onFollowersClick}\n        >\n          <p className=\"text-sm font-medium text-foreground-100\">{followers}</p>\n          <span className=\"text-sm font-normal text-foreground-300\">\n            Followers\n          </span>\n        </Button>\n        <Button\n          variant=\"secondary\"\n          className=\"w-1/2 h-9 normal-case font-sans gap-1\"\n          disabled={!onFollowingsClick}\n          onClick={onFollowingsClick}\n        >\n          <p className=\"text-sm font-medium text-foreground-100\">\n            {followings}\n          </p>\n          <span className=\"text-sm font-normal text-foreground-300\">\n            Following\n          </span>\n        </Button>\n      </div>\n      {onOpenSettings && (\n        <Button\n          variant=\"secondary\"\n          className=\"w-full h-9 normal-case font-sans px-1.5 py-2\"\n          onClick={handleOpenSettings}\n        >\n          <span className=\"text-sm font-medium text-foreground-100\">\n            Settings\n          </span>\n        </Button>\n      )}\n      <Button\n        variant=\"secondary\"\n        className=\"w-full h-9 normal-case font-sans px-1.5 py-2\"\n        onClick={handleLogout}\n      >\n        <span className=\"text-sm font-medium text-foreground-100\">Log Out</span>\n      </Button>\n    </div>\n  );\n};\n\nexport default ConnectionTooltipContent;\n"]}