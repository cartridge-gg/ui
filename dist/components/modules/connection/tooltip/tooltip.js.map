{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../../../src/components/modules/connection/tooltip/tooltip.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useLayoutContext } from \"@/components/layout/context\";\nimport {\n  AchievementPlayerAvatar,\n  ConnectionTooltipContent,\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/index\";\nimport { cn } from \"@/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport {\n  HTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nexport const connectionTooltipVariants = cva(\n  \"flex items-center gap-1.5 rounded px-3 py-2.5\",\n  {\n    variants: {\n      variant: {\n        darkest: \"bg-background-100 hover:bg-background-200\",\n        darker: \"bg-background-100 hover:bg-background-200\",\n        dark: \"bg-background-100 hover:bg-background-200\",\n        default: \"bg-background-200 hover:bg-background-300\",\n        light: \"bg-background-300 hover:bg-background-400\",\n        lighter: \"bg-background-400 hover:bg-background-500\",\n        lightest: \"bg-background-500 hover:bg-background-500\",\n        ghost: \"bg-transparent\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface ConnectionTooltipProps\n  extends HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof connectionTooltipVariants> {\n  username?: string;\n  address?: string;\n  chainId?: string;\n  followers?: number;\n  followings?: number;\n  hideUsername?: boolean;\n  hideNetwork?: boolean;\n  onFollowersClick?: () => void;\n  onFollowingsClick?: () => void;\n  onOpenSettings?: () => void;\n  onLogout?: () => void;\n}\n\nexport const ConnectionTooltip = ({\n  username,\n  address,\n  chainId,\n  followers,\n  followings,\n  hideUsername,\n  hideNetwork,\n  onFollowersClick,\n  onFollowingsClick,\n  onOpenSettings,\n  onLogout,\n  variant,\n  className,\n  children,\n  ...props\n}: ConnectionTooltipProps) => {\n  const { setWithBackground } = useLayoutContext();\n  const [open, setOpen] = useState(false);\n  const triggerRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Node;\n      if (\n        !triggerRef.current?.contains(target) &&\n        !contentRef.current?.contains(target)\n      ) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [setOpen]);\n\n  const handleClick = useCallback(() => {\n    setOpen(true);\n    setWithBackground(true);\n  }, [setOpen, setWithBackground]);\n\n  const handleFollowersClick = useCallback(() => {\n    onFollowersClick?.();\n    setOpen(false);\n    setWithBackground(false);\n  }, [onFollowersClick, setOpen, setWithBackground]);\n\n  const handleFollowingsClick = useCallback(() => {\n    onFollowingsClick?.();\n    setOpen(false);\n    setWithBackground(false);\n  }, [onFollowingsClick, setOpen, setWithBackground]);\n\n  const handleLogout = useCallback(() => {\n    onLogout?.();\n    setOpen(false);\n    setWithBackground(false);\n  }, [onLogout, setOpen, setWithBackground]);\n\n  const handleOpenSettings = useCallback(() => {\n    onOpenSettings?.();\n    setOpen(false);\n    setWithBackground(false);\n  }, [onOpenSettings, setOpen, setWithBackground]);\n\n  return (\n    <TooltipProvider>\n      <Tooltip open={open} onOpenChange={() => {}}>\n        <div ref={triggerRef} {...props}>\n          <TooltipTrigger\n            className={cn(\n              connectionTooltipVariants({ variant }),\n              className,\n              hideUsername && \"hidden\",\n            )}\n            onClick={handleClick}\n          >\n            {username && (\n              <AchievementPlayerAvatar username={username} size=\"sm\" />\n            )}\n            <div className=\"text-sm font-semibold\">{username}</div>\n          </TooltipTrigger>\n        </div>\n        <TooltipContent\n          ref={contentRef}\n          className=\"p-0 overflow-visible my-1 mx-3\"\n        >\n          {username && address && chainId && (\n            <ConnectionTooltipContent\n              username={username}\n              address={address}\n              chainId={chainId}\n              followers={followers}\n              followings={followings}\n              hideNetwork={hideNetwork}\n              setOpen={setOpen}\n              onFollowersClick={\n                onFollowersClick ? handleFollowersClick : undefined\n              }\n              onFollowingsClick={\n                onFollowingsClick ? handleFollowingsClick : undefined\n              }\n              onOpenSettings={onOpenSettings ? handleOpenSettings : undefined}\n              onLogout={onLogout ? handleLogout : undefined}\n            />\n          )}\n          {children}\n        </TooltipContent>\n      </Tooltip>\n    </TooltipProvider>\n  );\n};\n\nexport default ConnectionTooltip;\n"]}