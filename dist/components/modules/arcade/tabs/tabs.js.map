{"version":3,"file":"tabs.js","sourceRoot":"","sources":["../../../../../src/components/modules/arcade/tabs/tabs.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  ArcadeMenuButton,\n  ArcadeMenuItem,\n  ArcadeTab,\n  ChestIcon,\n  LeaderboardIcon,\n  LightbulbIcon,\n  ListIcon,\n  MetricsIcon,\n  PulseIcon,\n  ScrollIcon,\n  Select,\n  SelectContent,\n  ShoppingCartIcon,\n  SwordsIcon,\n  Tabs,\n  TabsList,\n  TrophyIcon,\n  UsersIcon,\n} from \"@/index\";\nimport { cn } from \"@/utils\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { cva, VariantProps } from \"class-variance-authority\";\n\nconst arcadeTabsVariants = cva(\n  \"flex justify-start items-end w-full p-0 px-4 border-b rounded-none\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background-100 border-background-200\",\n      },\n      size: {\n        default: \"gap-3 h-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport type TabValue =\n  | \"inventory\"\n  | \"achievements\"\n  | \"leaderboard\"\n  | \"guilds\"\n  | \"activity\"\n  | \"metrics\"\n  | \"about\"\n  | \"marketplace\"\n  | \"items\"\n  | \"holders\"\n  | \"predict\"\n  | \"positions\";\n\nexport interface ArcadeTabsProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof arcadeTabsVariants> {\n  defaultValue?: TabValue;\n  order?: TabValue[];\n  onTabClick?: (tab: TabValue) => void;\n}\n\nexport const ArcadeTabs = ({\n  defaultValue = \"activity\",\n  order = [\n    \"activity\",\n    \"leaderboard\",\n    \"predict\",\n    \"about\",\n    \"metrics\",\n    \"marketplace\",\n    \"inventory\",\n    \"achievements\",\n    \"positions\",\n    \"guilds\",\n    \"items\",\n    \"holders\",\n  ],\n  onTabClick,\n  variant,\n  size,\n  className,\n  children,\n}: ArcadeTabsProps) => {\n  const [active, setActive] = useState<TabValue>(defaultValue);\n  const [visibleTabs, setVisibleTabs] = useState<TabValue[]>(order);\n  const [overflowTabs, setOverflowTabs] = useState<TabValue[]>([]);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const hiddenRef = useRef<HTMLDivElement>(null);\n  const tabRefs = useRef(\n    new Map<TabValue, { width: number; visible: boolean }>(),\n  );\n\n  useEffect(() => {\n    if (!hiddenRef.current) return;\n    const tabWidths = new Map<TabValue, { width: number; visible: boolean }>();\n    hiddenRef.current.childNodes.forEach((node) => {\n      const element = node as HTMLDivElement;\n      const tab = element.textContent?.toLowerCase();\n      if (tab) {\n        const visible = order.includes(tab as TabValue);\n        tabWidths.set(tab as TabValue, { width: element.offsetWidth, visible });\n      }\n    });\n    tabRefs.current = tabWidths;\n  }, [tabRefs, hiddenRef, order]);\n\n  useEffect(() => {\n    const observer = new ResizeObserver(() => {\n      if (!containerRef.current) return;\n      const gap = 12;\n      const buttonWidth = 32;\n      const availableWidth =\n        containerRef.current.offsetWidth - buttonWidth - gap;\n      let usedWidth = 32;\n      const newVisibleTabs: TabValue[] = [];\n      const newOverflowTabs: TabValue[] = [];\n\n      order.forEach((tab) => {\n        const { width, visible } = tabRefs.current.get(tab) || {\n          width: 0,\n          visible: false,\n        };\n        if (!visible) return;\n        if (\n          usedWidth + width <= availableWidth &&\n          newOverflowTabs.length === 0\n        ) {\n          newVisibleTabs.push(tab);\n          usedWidth += width + gap;\n        } else {\n          newOverflowTabs.push(tab);\n        }\n      });\n\n      if (visibleTabs.join(\",\") !== newVisibleTabs.join(\",\")) {\n        setVisibleTabs(newVisibleTabs);\n      }\n      if (overflowTabs.join(\",\") !== newOverflowTabs.join(\",\")) {\n        setOverflowTabs(newOverflowTabs);\n      }\n    });\n\n    observer.observe(containerRef.current!);\n    return () => observer.disconnect();\n  }, [order, containerRef.current, visibleTabs, overflowTabs, tabRefs]);\n\n  const overflowActive = useMemo(\n    () => overflowTabs.includes(active),\n    [overflowTabs, active],\n  );\n\n  return (\n    <Tabs\n      defaultValue={defaultValue}\n      onValueChange={(value: string) => setActive(value as TabValue)}\n      className=\"h-full flex flex-col overflow-hidden\"\n    >\n      <TabsList\n        ref={containerRef}\n        className={cn(arcadeTabsVariants({ variant, size }), className)}\n      >\n        <div ref={hiddenRef} className=\"flex gap-2 absolute invisible\">\n          {order.map((tab) => (\n            <Tab key={tab} tab={tab} value={active} size={size} />\n          ))}\n        </div>\n        {visibleTabs.map((tab) => (\n          <Tab\n            key={tab}\n            tab={tab}\n            value={active}\n            size={size}\n            onTabClick={() => onTabClick?.(tab as TabValue)}\n          />\n        ))}\n        <Select>\n          <div className=\"grow flex justify-end items-center self-center\">\n            <ArcadeMenuButton\n              active={overflowActive}\n              className={cn(overflowTabs.length === 0 && \"hidden\")}\n            />\n          </div>\n          <SelectContent className=\"bg-background-100\">\n            {overflowTabs.map((tab) => (\n              <Tab\n                key={tab}\n                tab={tab}\n                value={active}\n                size={size}\n                onTabClick={() => onTabClick?.(tab as TabValue)}\n                item={true}\n              />\n            ))}\n          </SelectContent>\n        </Select>\n      </TabsList>\n      {children}\n    </Tabs>\n  );\n};\n\nconst Tab = ({\n  tab,\n  value,\n  size,\n  onTabClick,\n  item,\n}: {\n  tab: TabValue;\n  value: string;\n  size: \"default\" | null | undefined;\n  onTabClick?: () => void;\n  item?: boolean;\n}) => {\n  const props = {\n    key: tab,\n    value: tab,\n    active: value === tab,\n    size,\n    onClick: onTabClick,\n    item,\n  };\n  switch (tab) {\n    case \"inventory\":\n      return <InventoryNavButton {...props} />;\n    case \"achievements\":\n      return <AchievementsNavButton {...props} />;\n    case \"leaderboard\":\n      return <LeaderboardNavButton {...props} />;\n    case \"guilds\":\n      return <GuildsNavButton {...props} />;\n    case \"activity\":\n      return <ActivityNavButton {...props} />;\n    case \"metrics\":\n      return <MetricsNavButton {...props} />;\n    case \"about\":\n      return <AboutNavButton {...props} />;\n    case \"marketplace\":\n      return <MarketplaceNavButton {...props} />;\n    case \"items\":\n      return <ItemsNavButton {...props} />;\n    case \"holders\":\n      return <HoldersNavButton {...props} />;\n    case \"predict\":\n      return <PredictNavButton {...props} />;\n    case \"positions\":\n      return <PositionsNavButton {...props} />;\n    default:\n      return null;\n  }\n};\n\nconst InventoryNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Inventory\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<ChestIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<ChestIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst AchievementsNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Achievements\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<TrophyIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<TrophyIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst LeaderboardNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Leaderboard\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<LeaderboardIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<LeaderboardIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst GuildsNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Guilds\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<SwordsIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<SwordsIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst ActivityNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Activity\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<PulseIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<PulseIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst MetricsNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Metrics\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<MetricsIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<MetricsIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst AboutNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"About\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<ListIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<ListIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst MarketplaceNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Shop\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<ShoppingCartIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<ShoppingCartIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst ItemsNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Items\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<ScrollIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<ScrollIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst HoldersNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Holders\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<UsersIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<UsersIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst PredictNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Predict\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<LightbulbIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<LightbulbIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nconst PositionsNavButton = React.forwardRef<\n  HTMLButtonElement,\n  {\n    value: string;\n    active: boolean;\n    size: \"default\" | null | undefined;\n    onClick?: () => void;\n    item?: boolean;\n    label?: string;\n  }\n>(({ value, active, size, onClick, item, label = \"Positions\" }, ref) => {\n  if (item) {\n    return (\n      <ArcadeMenuItem\n        ref={ref}\n        value={value}\n        Icon={<LightbulbIcon variant=\"solid\" size=\"sm\" />}\n        label={label}\n        active={active}\n        size={size}\n        onClick={onClick}\n      />\n    );\n  }\n  return (\n    <ArcadeTab\n      ref={ref}\n      value={value}\n      Icon={<LightbulbIcon variant=\"solid\" size=\"sm\" />}\n      label={label}\n      active={active}\n      size={size}\n      onClick={onClick}\n    />\n  );\n});\n\nexport default ArcadeTabs;\n"]}