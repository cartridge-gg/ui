{"version":3,"file":"game-header.js","sourceRoot":"","sources":["../../../../../src/components/modules/arcade/game-header/game-header.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  AchievementContentProps,\n  AchievementPinProps,\n  CardTitle,\n  DiscordIcon,\n  DojoIcon,\n  GitHubIcon,\n  GlobeIcon,\n  TelegramIcon,\n  Thumbnail,\n  XIcon,\n} from \"@/index\";\nimport { cn } from \"@/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport { useMemo } from \"react\";\nimport { AchievementPinIcons } from \"@/components/modules/achievements/pin-icons\";\n\nexport interface Metadata {\n  name: string;\n  logo?: string;\n  cover?: string;\n}\n\nexport interface Socials {\n  website?: string;\n  discord?: string;\n  telegram?: string;\n  twitter?: string;\n  github?: string;\n}\n\nexport interface ArcadeGameHeaderProps\n  extends VariantProps<typeof arcadeGameHeaderVariants> {\n  metadata: Metadata;\n  achievements?: {\n    id: string;\n    content: AchievementContentProps;\n    pin?: AchievementPinProps;\n  }[];\n  socials?: Socials;\n  active?: boolean;\n  className?: string;\n  color?: string;\n}\n\nexport const arcadeGameHeaderVariants = cva(\n  \"h-16 flex justify-between items-center px-4 py-3 gap-x-3\",\n  {\n    variants: {\n      variant: {\n        darkest: \"bg-background-100\",\n        darker: \"bg-background-100\",\n        dark: \"bg-background-100\",\n        default: \"bg-background-200\",\n        light: \"bg-background-200\",\n        lighter: \"bg-background-200\",\n        lightest: \"bg-background-200\",\n        ghost: \"bg-transparent\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\ntype ArcadeGameHeaderVariant = VariantProps<\n  typeof arcadeGameHeaderVariants\n>[\"variant\"];\nexport const ArcadeGameHeader = ({\n  achievements,\n  metadata,\n  socials,\n  active,\n  variant,\n  className,\n  color,\n}: ArcadeGameHeaderProps) => {\n  const pins = useMemo(() => {\n    if (!achievements) return [];\n    return achievements\n      .filter((a) => a.content.icon && a.pin?.pinned)\n      .map((a) => ({\n        id: a.id,\n        icon: a.content.icon || \"fa-trophy\",\n        name: a.content.title || \"\",\n      }))\n      .slice(0, 3);\n  }, [achievements]);\n\n  const style = useMemo(() => {\n    const bgColor =\n      !variant || variant === \"default\" || variant.includes(\"light\")\n        ? `var(--background-200)`\n        : `var(--background-100)`;\n    const opacity = metadata.cover ? \"96%\" : \"50%\";\n    const image = metadata.cover\n      ? `url(${metadata.cover})`\n      : \"var(--theme-cover-url)\";\n    return {\n      backgroundImage: `linear-gradient(to right,${bgColor},color-mix(in srgb, ${bgColor} ${opacity}, transparent)),${image}`,\n    };\n  }, [metadata.cover, variant]);\n\n  return (\n    <div\n      className={cn(\n        arcadeGameHeaderVariants({ variant }),\n        \"bg-top bg-cover bg-no-repeat select-none\",\n      )}\n      style={style}\n    >\n      <div className=\"flex items-center gap-3\">\n        <Thumbnail\n          icon={metadata.logo ?? <DojoIcon className=\"w-full h-full\" />}\n          variant={\n            !variant || variant === \"default\" || variant?.includes(\"light\")\n              ? \"light\"\n              : \"default\"\n          }\n          size=\"lg\"\n        />\n        <div className=\"flex flex-col gap-x-4 gap-y-0.5 sm:flex-row\">\n          <CardTitle className=\"text-foreground-100 text-sm font-medium tracking-normal flex items-center whitespace-nowrap\">\n            {metadata.name}\n          </CardTitle>\n          {pins.length > 0 && (\n            <AchievementPinIcons\n              theme={active}\n              pins={pins}\n              variant={variant}\n              className={className}\n              color={color}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"flex items-center justify-end gap-x-1 sm:gap-x-2 gap-y-0.5 flex-wrap\">\n        {socials?.website && (\n          <AchievementSocialWebsite\n            website={socials.website}\n            variant={variant}\n          />\n        )}\n        {socials?.discord && (\n          <AchievementSocialDiscord\n            discord={socials.discord}\n            variant={variant}\n          />\n        )}\n        {socials?.twitter && (\n          <AchievementSocialTwitter\n            twitter={socials.twitter}\n            variant={variant}\n          />\n        )}\n        {socials?.telegram && (\n          <AchievementSocialTelegram\n            telegram={socials.telegram}\n            variant={variant}\n          />\n        )}\n        {socials?.github && (\n          <AchievementSocialGithub github={socials.github} variant={variant} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const AchievementSocialWebsite = ({\n  website,\n  variant,\n  className,\n}: {\n  website: string;\n  variant: ArcadeGameHeaderVariant;\n  className?: string;\n}) => {\n  const label = useMemo(() => {\n    return website.replace(/^.*https?:\\/\\//, \"\").replace(/\\/$/, \"\");\n  }, [website]);\n  return (\n    <AchievementSocial\n      icon={<GlobeIcon variant=\"line\" size=\"xs\" />}\n      href={website}\n      label={label}\n      variant={variant}\n      className={className}\n    />\n  );\n};\n\nconst AchievementSocialDiscord = ({\n  discord,\n  variant,\n}: {\n  discord: string;\n  variant: ArcadeGameHeaderVariant;\n}) => {\n  return (\n    <AchievementSocial\n      icon={<DiscordIcon size=\"xs\" />}\n      href={discord}\n      variant={variant}\n    />\n  );\n};\n\nconst AchievementSocialTwitter = ({\n  twitter,\n  variant,\n}: {\n  twitter: string;\n  variant: ArcadeGameHeaderVariant;\n}) => {\n  return (\n    <AchievementSocial\n      icon={<XIcon size=\"xs\" />}\n      href={twitter}\n      variant={variant}\n    />\n  );\n};\n\nconst AchievementSocialGithub = ({\n  github,\n  variant,\n}: {\n  github: string;\n  variant: ArcadeGameHeaderVariant;\n}) => {\n  return (\n    <AchievementSocial\n      icon={<GitHubIcon size=\"xs\" />}\n      href={github}\n      variant={variant}\n    />\n  );\n};\n\nconst AchievementSocialTelegram = ({\n  telegram,\n  variant,\n}: {\n  telegram: string;\n  variant: ArcadeGameHeaderVariant;\n}) => {\n  return (\n    <AchievementSocial\n      icon={<TelegramIcon size=\"xs\" />}\n      href={telegram}\n      variant={variant}\n    />\n  );\n};\n\nconst achievementSocialVariants = cva(\n  \"flex items-center gap-x-1 rounded px-1.5 py-1 cursor-pointer text-foreground-100\",\n  {\n    variants: {\n      variant: {\n        darkest: \"bg-background-100 hover:bg-background-200\",\n        darker: \"bg-background-100 hover:bg-background-200\",\n        dark: \"bg-background-100 hover:bg-background-200\",\n        default: \"bg-background-200 hover:bg-background-300\",\n        light: \"bg-background-200 hover:bg-background-300\",\n        lighter: \"bg-background-200 hover:bg-background-300\",\n        lightest: \"bg-background-200 hover:bg-background-300\",\n        ghost: \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\ntype AchievementSocialVariant = VariantProps<\n  typeof achievementSocialVariants\n>[\"variant\"];\nexport const AchievementSocial = ({\n  icon,\n  href,\n  label,\n  variant,\n  className,\n}: {\n  icon: React.ReactNode;\n  href: string;\n  label?: string;\n  variant: AchievementSocialVariant;\n  className?: string;\n}) => {\n  return (\n    <a\n      href={href}\n      draggable={false}\n      target=\"_blank\"\n      className={cn(achievementSocialVariants({ variant }), className)}\n    >\n      {icon}\n      {label && (\n        <p className=\"px-0.5 text-xs font-medium tracking-normal hidden sm:block\">\n          {label}\n        </p>\n      )}\n    </a>\n  );\n};\n\nexport default ArcadeGameHeader;\n"]}