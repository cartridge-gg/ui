{"version":3,"file":"discovery-event.js","sourceRoot":"","sources":["../../../../../src/components/modules/arcade/discovery-event/discovery-event.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CardTitle, Skeleton, SpaceInvaderIcon } from \"@/index\";\nimport { cn } from \"@/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport { useMemo, HTMLAttributes, useState, useEffect } from \"react\";\n\nexport interface ArcadeDiscoveryEventProps\n  extends HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof arcadeDiscoveryEventVariants> {\n  name: string;\n  timestamp: number;\n  Icon?: React.ReactNode;\n  achievement?: {\n    title: string;\n    icon: string;\n  };\n  loading?: boolean;\n  color?: string;\n}\n\nexport const arcadeDiscoveryEventVariants = cva(\n  \"select-none h-11 flex justify-between items-center px-3 py-2.5\",\n  {\n    variants: {\n      variant: {\n        darkest: \"bg-background-100\",\n        darker: \"bg-background-100\",\n        dark: \"bg-background-100\",\n        default: \"bg-background-200\",\n        light: \"bg-background-200\",\n        lighter: \"bg-background-200\",\n        lightest: \"bg-background-200\",\n        ghost: \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport const ArcadeDiscoveryEvent = ({\n  name,\n  timestamp,\n  Icon,\n  achievement,\n  loading,\n  variant,\n  className,\n  color,\n}: ArcadeDiscoveryEventProps) => {\n  const bgColor = useMemo(() => {\n    switch (variant) {\n      case \"darkest\":\n      case \"darker\":\n      case \"dark\":\n        return \"bg-background-200\";\n      case \"default\":\n      case \"light\":\n      case \"lighter\":\n      case \"lightest\":\n      case \"ghost\":\n      default:\n        return \"bg-background-300\";\n    }\n  }, [variant]);\n\n  if (loading) {\n    return (\n      <div className={cn(arcadeDiscoveryEventVariants({ variant }), className)}>\n        <Skeleton className={cn(\"w-[120px] h-full\", bgColor)} />\n        <Skeleton className={cn(\"w-[60px] h-full\", bgColor)} />\n      </div>\n    );\n  }\n  return (\n    <div className={cn(arcadeDiscoveryEventVariants({ variant }), className)}>\n      <div className=\"flex items-center gap-x-1.5\">\n        {Icon ? Icon : <SpaceInvaderIcon size=\"sm\" variant=\"solid\" />}\n        <CardTitle className=\"text-sm font-normal tracking-normal text-foreground-100\">\n          {name}\n        </CardTitle>\n        {achievement && (\n          <AchievementEvent\n            title={achievement.title}\n            icon={achievement.icon}\n            className={className}\n            color={color}\n          />\n        )}\n      </div>\n      <Timestamp timestamp={timestamp} />\n    </div>\n  );\n};\n\nconst AchievementEvent = ({\n  title,\n  icon,\n  className,\n  color,\n}: {\n  title: string;\n  icon: string;\n  className?: string;\n  color?: string;\n}) => {\n  return (\n    <div\n      data-theme\n      className={cn(\n        \"flex items-center gap-x-1.5 data-[theme=true]:text-primary\",\n        className,\n      )}\n      style={{ color }}\n    >\n      <p className=\"text-xs text-foreground-300\">earned</p>\n      <div className=\"flex items-center gap-1 p-1 border-background-400 border rounded-sm\">\n        <div className={cn(icon, \"fa-solid w-3 h-3\")} />\n        <p className=\"text-xs\">{title}</p>\n      </div>\n    </div>\n  );\n};\n\nconst Timestamp = ({ timestamp }: { timestamp: number }) => {\n  const [state, setState] = useState<{\n    seconds: number;\n    minutes: number;\n    hours: number;\n    days: number;\n  }>({\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n    days: 0,\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const diff = now - timestamp * 1000;\n      setState({\n        seconds: Math.floor(diff / 1000),\n        minutes: Math.floor(diff / (1000 * 60)),\n        hours: Math.floor(diff / (1000 * 60 * 60)),\n        days: Math.floor(diff / (1000 * 60 * 60 * 24)),\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [timestamp]);\n\n  const label = useMemo(() => {\n    if (state.days > 0) return `${state.days}d ago`;\n    if (state.hours > 0) return `${state.hours}h ago`;\n    if (state.minutes > 0) return `${state.minutes}m ago`;\n    return `${state.seconds}s ago`;\n  }, [state]);\n\n  return <p className=\"text-xs text-foreground-300\">{label}</p>;\n};\n"]}