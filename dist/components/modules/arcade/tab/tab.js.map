{"version":3,"file":"tab.js","sourceRoot":"","sources":["../../../../../src/components/modules/arcade/tab/tab.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AACtC,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAC7B,OAAO,EAAE,GAAG,EAAgB,MAAM,0BAA0B,CAAC;AAC7D,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,MAAM,iBAAiB,GAAG,GAAG,CAC3B,kIAAkI,EAClI;IACE,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,EAAE;SACZ;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,6BAA6B;SACvC;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE,SAAS;KAChB;CACF,CACF,CAAC;AAWF,MAAM,CAAC,MAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CACvC,CACE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,KAAK,EAAE,EAC3E,GAAG,EACH,EAAE;IACF,OAAO,CACL,MAAC,WAAW,IACV,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,EAAE,CACX,6EAA6E,EAC7E,SAAS,CACV,EACD,OAAO,EAAE,OAAO,EAChB,GAAG,EAAE,GAAG,KACJ,KAAK,aAET,8BACe,MAAM,EACnB,SAAS,EAAE,EAAE,CAAC,iBAAiB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,aAElD,IAAI,EACL,YAAG,SAAS,EAAC,aAAa,YAAE,KAAK,GAAK,IAClC,EACN,6BACe,MAAM,EACnB,SAAS,EAAE,EAAE,CACX,qEAAqE,EACrE,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CACrC,GACD,IACU,CACf,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,SAAS,CAAC","sourcesContent":["import { TabsTrigger } from \"@/index\";\nimport { cn } from \"@/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport React from \"react\";\n\nconst arcadeTabVariants = cva(\n  \"flex justify-center items-center text-foreground-300 hover:text-foreground-200 data-[active=true]:text-primary transition-colors\",\n  {\n    variants: {\n      variant: {\n        default: \"\",\n      },\n      size: {\n        default: \"p-2 pt-[10px] gap-1 text-sm\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ArcadeTabProps extends VariantProps<typeof arcadeTabVariants> {\n  Icon: React.ReactNode;\n  value: string;\n  label: string;\n  active?: boolean;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport const ArcadeTab = React.forwardRef<HTMLButtonElement, ArcadeTabProps>(\n  (\n    { Icon, value, label, active, className, variant, size, onClick, ...props },\n    ref,\n  ) => {\n    return (\n      <TabsTrigger\n        value={value}\n        className={cn(\n          \"p-0 flex flex-col items-center cursor-pointer select-none transition-colors\",\n          className,\n        )}\n        onClick={onClick}\n        ref={ref}\n        {...props}\n      >\n        <div\n          data-active={active}\n          className={cn(arcadeTabVariants({ variant, size }))}\n        >\n          {Icon}\n          <p className=\"font-normal\">{label}</p>\n        </div>\n        <div\n          data-active={active}\n          className={cn(\n            \"rounded-full bg-primary h-0.5 w-full translate-y-[1px] text-primary\",\n            active ? \"opacity-100\" : \"opacity-0\",\n          )}\n        />\n      </TabsTrigger>\n    );\n  },\n);\n\nexport default ArcadeTab;\n"]}