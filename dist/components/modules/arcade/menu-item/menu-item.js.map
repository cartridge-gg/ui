{"version":3,"file":"menu-item.js","sourceRoot":"","sources":["../../../../../src/components/modules/arcade/menu-item/menu-item.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AAClD,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAC7B,OAAO,EAAE,GAAG,EAAgB,MAAM,0BAA0B,CAAC;AAC7D,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAE3C,MAAM,sBAAsB,GAAG,GAAG,CAChC,0NAA0N,EAC1N;IACE,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,EAAE;SACZ;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,mCAAmC;SAC7C;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE,SAAS;KAChB;CACF,CACF,CAAC;AAYF,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,CAAC,UAAU,CAI5C,CACE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,KAAK,EAAE,EAC3E,GAAG,EACH,EAAE;IACF,MAAM,WAAW,GAAG,WAAW,CAAC,CAAC,CAAmC,EAAE,EAAE;QACtE,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,CAAC,CAAC,eAAe,EAAE,CAAC;IACtB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,KAAC,WAAW,IACV,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,EAAE,CACX,iIAAiI,EACjI,SAAS,CACV,EACD,GAAG,EAAE,GAAG,KACJ,KAAK,YAET,KAAC,UAAU,IACT,QAAQ,EAAE,OAAO,EACjB,OAAO,EAAE,WAAW,iBACP,MAAM,EACnB,KAAK,EAAE,KAAK,EACZ,UAAU,QACV,SAAS,EAAE,EAAE,CAAC,sBAAsB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,YAExD,eAAK,SAAS,EAAE,EAAE,CAAC,uCAAuC,CAAC,aACxD,IAAI,EACL,YAAG,SAAS,EAAC,aAAa,YAAE,KAAK,GAAK,IAClC,GACK,GACD,CACf,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import { SelectItem, TabsTrigger } from \"@/index\";\nimport { cn } from \"@/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport React, { useCallback } from \"react\";\n\nconst arcadeMenuItemVariants = cva(\n  \"rounded-none flex justify-start items-center gap-1 text-foreground-300 bg-background-200 hover:text-foreground-200 hover:bg-background-300 data-[active=true]:text-primary transition-colors cursor-pointer line-clamp-1\",\n  {\n    variants: {\n      variant: {\n        default: \"\",\n      },\n      size: {\n        default: \"min-w-[192px] px-2 py-2.5 text-sm\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ArcadeMenuItemProps\n  extends VariantProps<typeof arcadeMenuItemVariants> {\n  Icon: React.ReactNode;\n  value: string;\n  label: string;\n  active?: boolean;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport const ArcadeMenuItem = React.forwardRef<\n  HTMLButtonElement,\n  ArcadeMenuItemProps\n>(\n  (\n    { Icon, value, label, active, className, variant, size, onClick, ...props },\n    ref,\n  ) => {\n    const handleFocus = useCallback((e: React.FocusEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n    }, []);\n\n    return (\n      <TabsTrigger\n        value={value}\n        className={cn(\n          \"w-full p-0 flex cursor-pointer select-none transition-colors data-[state=active]:bg-transparent data-[state=active]:shadow-none\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      >\n        <SelectItem\n          onSelect={onClick}\n          onFocus={handleFocus}\n          data-active={active}\n          value={value}\n          simplified\n          className={cn(arcadeMenuItemVariants({ variant, size }))}\n        >\n          <div className={cn(\"flex justify-start items-center gap-1\")}>\n            {Icon}\n            <p className=\"font-normal\">{label}</p>\n          </div>\n        </SelectItem>\n      </TabsTrigger>\n    );\n  },\n);\n\nexport default ArcadeMenuItem;\n"]}