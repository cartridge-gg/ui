{"version":3,"file":"card.js","sourceRoot":"","sources":["../../../../../src/components/modules/traceabilities/card/card.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AchievementPlayerAvatar } from \"@/index\";\nimport { cn } from \"@/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nexport const traceabilityCardVariants = cva(\n  \"select-none px-3 py-2.5 transition-colors flex items-center justify-between gap-4 overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background-200 hover:bg-background-300 cursor-pointer\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface TraceabilityCardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof traceabilityCardVariants> {\n  username: string;\n  timestamp: number;\n  Icon: React.ReactNode;\n}\n\nexport const TraceabilityCard = ({\n  username,\n  timestamp,\n  Icon,\n  variant,\n  className,\n  children,\n  ...props\n}: TraceabilityCardProps) => {\n  const [state, setState] = useState<{\n    seconds: number;\n    minutes: number;\n    hours: number;\n    days: number;\n    months: number;\n    years: number;\n  }>({\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n    days: 0,\n    months: 0,\n    years: 0,\n  });\n\n  useEffect(() => {\n    if (!timestamp) return;\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const diff = now - timestamp * 1000;\n      setState({\n        seconds: Math.floor(diff / 1000),\n        minutes: Math.floor(diff / (1000 * 60)),\n        hours: Math.floor(diff / (1000 * 60 * 60)),\n        days: Math.floor(diff / (1000 * 60 * 60 * 24)),\n        months: Math.floor(diff / (1000 * 60 * 60 * 24 * 30)),\n        years: Math.floor(diff / (1000 * 60 * 60 * 24 * 365)),\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [timestamp]);\n\n  const ellapsedTime = useMemo(() => {\n    if (state.years > 0) return `${state.years}y`;\n    if (state.months > 0) return `${state.months}mo`;\n    if (state.days > 0) return `${state.days}d`;\n    if (state.hours > 0) return `${state.hours}h`;\n    if (state.minutes > 0) return `${state.minutes}m`;\n    return `${state.seconds}s`;\n  }, [state]);\n\n  return (\n    <div\n      className={cn(traceabilityCardVariants({ variant }), className)}\n      {...props}\n    >\n      <div className=\"flex items-center gap-1.5 overflow-hidden\">\n        <div className=\"flex items-center gap-1\">\n          <AchievementPlayerAvatar\n            username={username}\n            size=\"sm\"\n            className=\"shrink-0\"\n          />\n          <div className=\"text-sm\">{username}</div>\n        </div>\n        <div className=\"p-1 flex items-center justify-center bg-translucent-dark-100 rounded text-translucent-light-150\">\n          {Icon}\n        </div>\n        {children}\n      </div>\n      <div className=\"text-xs text-translucent-light-150 w-10 text-right\">\n        {ellapsedTime}\n      </div>\n    </div>\n  );\n};\n\nexport default TraceabilityCard;\n"]}