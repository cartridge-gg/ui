{"version":3,"file":"signer-method.js","sourceRoot":"","sources":["../../../../src/components/modules/signer-method/signer-method.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAC5D,OAAO,EACL,eAAe,EACf,gBAAgB,EAChB,eAAe,EACf,iBAAiB,EACjB,gBAAgB,EAChB,cAAc,EACd,sBAAsB,GACvB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AACvE,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAC7B,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAWjC,MAAM,OAAO,GAMT;IACF,MAAM,EAAE;QACN,IAAI,EAAE,KAAC,eAAe,IAAC,IAAI,EAAC,IAAI,GAAG;KACpC;IACD,OAAO,EAAE;QACP,IAAI,EAAE,KAAC,gBAAgB,IAAC,IAAI,EAAC,IAAI,GAAG;KACrC;IACD,GAAG,EAAE;QACH,IAAI,EAAE,KAAC,UAAU,IAAC,OAAO,EAAC,OAAO,EAAC,IAAI,EAAC,IAAI,GAAG;QAC9C,KAAK,EAAE,KAAK;KACb;IACD,OAAO,EAAE;QACP,IAAI,EAAE,KAAC,eAAe,IAAC,IAAI,EAAC,IAAI,EAAC,OAAO,EAAC,OAAO,GAAG;KACpD;IACD,MAAM,EAAE;QACN,IAAI,EAAE,KAAC,UAAU,IAAC,OAAO,EAAC,OAAO,EAAC,IAAI,EAAC,IAAI,GAAG;KAC/C;IACD,MAAM,EAAE;QACN,IAAI,EAAE,KAAC,eAAe,IAAC,IAAI,EAAC,IAAI,GAAG;KACpC;IACD,OAAO,EAAE;QACP,IAAI,EAAE,KAAC,gBAAgB,IAAC,IAAI,EAAC,IAAI,GAAG;KACrC;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,KAAC,iBAAiB,IAAC,IAAI,EAAC,IAAI,GAAG;KACtC;IACD,KAAK,EAAE;QACL,IAAI,EAAE,KAAC,cAAc,IAAC,IAAI,EAAC,IAAI,GAAG;KACnC;IACD,aAAa,EAAE;QACb,IAAI,EAAE,KAAC,sBAAsB,IAAC,IAAI,EAAC,IAAI,GAAG;QAC1C,KAAK,EAAE,eAAe;KACvB;CACO,CAAC;AAEX,MAAM,UAAU,YAAY,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAqB;IAC1E,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IAEtC,OAAO,CACL,eACE,SAAS,EAAE,EAAE,CACX,mBAAmB,EACnB,2BAA2B,EAC3B,SAAS,EACT,2CAA2C,EAC3C,8CAA8C,EAC9C,SAAS,CACV,EACD,OAAO,EAAE,OAAO,EAChB,YAAY,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EACpC,YAAY,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,aAEpC,IAAI,IAAI,CACP,cACE,SAAS,EAAE,EAAE,CACX,iBAAiB,EACjB,gBAAgB,EAChB,mBAAmB,EACnB,OAAO,IAAI,mBAAmB,CAC/B,YAEA,IAAI,GACD,CACP,EACD,eAAM,SAAS,EAAC,+BAA+B,YAC5C,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GACjD,IACH,CACP,CAAC;AACJ,CAAC","sourcesContent":["import { MobileIcon, WalletIcon } from \"@/components/icons\";\nimport {\n  ArgentColorIcon,\n  DiscordColorIcon,\n  GoogleColorIcon,\n  MetaMaskColorIcon,\n  PhantomColorIcon,\n  RabbyColorIcon,\n  WalletConnectColorIcon,\n} from \"@/components/icons/brand-color\";\nimport { FingerprintIcon } from \"@/components/icons/brand/fingerprint\";\nimport { cn } from \"@/utils\";\nimport { useState } from \"react\";\nimport { SignerPendingCardKind } from \"../signer-pending-card/signer-pending-card\";\n\nexport type SignerMethodKind = SignerPendingCardKind | \"wallet\";\n\ninterface SignerMethodProps {\n  className?: string;\n  kind: SignerMethodKind;\n  onClick: () => void;\n}\n\nconst signers: Record<\n  SignerMethodKind,\n  {\n    icon: React.ReactNode;\n    label?: string;\n  }\n> = {\n  google: {\n    icon: <GoogleColorIcon size=\"sm\" />,\n  },\n  discord: {\n    icon: <DiscordColorIcon size=\"sm\" />,\n  },\n  sms: {\n    icon: <MobileIcon variant=\"solid\" size=\"sm\" />,\n    label: \"SMS\",\n  },\n  passkey: {\n    icon: <FingerprintIcon size=\"sm\" variant=\"solid\" />,\n  },\n  wallet: {\n    icon: <WalletIcon variant=\"solid\" size=\"sm\" />,\n  },\n  argent: {\n    icon: <ArgentColorIcon size=\"sm\" />,\n  },\n  phantom: {\n    icon: <PhantomColorIcon size=\"sm\" />,\n  },\n  metamask: {\n    icon: <MetaMaskColorIcon size=\"sm\" />,\n  },\n  rabby: {\n    icon: <RabbyColorIcon size=\"sm\" />,\n  },\n  walletconnect: {\n    icon: <WalletConnectColorIcon size=\"sm\" />,\n    label: \"WalletConnect\",\n  },\n} as const;\n\nexport function SignerMethod({ className, kind, onClick }: SignerMethodProps) {\n  const [hovered, setHovered] = useState(false);\n  const { icon, label } = signers[kind];\n\n  return (\n    <div\n      className={cn(\n        \"flex items-center\",\n        \"w-full h-[52px] p-3 gap-2\",\n        \"rounded\",\n        \"bg-background-200 hover:bg-background-300\",\n        \"cursor-pointer transition-colors ease-in-out\",\n        className,\n      )}\n      onClick={onClick}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      {icon && (\n        <div\n          className={cn(\n            \"w-fit h-fit p-1\",\n            \"rounded-[16px]\",\n            \"bg-background-300\",\n            hovered && \"bg-background-400\",\n          )}\n        >\n          {icon}\n        </div>\n      )}\n      <span className=\"text-foreground-100 text-base\">\n        {label || kind.charAt(0).toUpperCase() + kind.slice(1)}\n      </span>\n    </div>\n  );\n}\n"]}