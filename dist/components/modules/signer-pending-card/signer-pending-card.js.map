{"version":3,"file":"signer-pending-card.js","sourceRoot":"","sources":["../../../../src/components/modules/signer-pending-card/signer-pending-card.tsx"],"names":[],"mappings":"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","sourcesContent":["import { MobileIcon } from \"@/components/icons\";\nimport {\n  ArgentColorIcon,\n  DiscordColorIcon,\n  GoogleColorIcon,\n  MetaMaskColorIcon,\n  PhantomColorIcon,\n  RabbyColorIcon,\n  WalletConnectColorIcon,\n} from \"@/components/icons/brand-color\";\nimport { FingerprintIcon } from \"@/components/icons/brand/fingerprint\";\nimport { cn, formatAddress } from \"@/utils\";\n\nexport type SignerPendingCardKind =\n  | \"google\"\n  | \"sms\"\n  | \"passkey\"\n  | \"discord\"\n  | \"metamask\"\n  | \"argent\"\n  | \"rabby\"\n  | \"phantom\"\n  | \"walletconnect\";\n\ninterface SignerPendingCardProps {\n  className?: string;\n  kind: SignerPendingCardKind;\n  inProgress: boolean;\n  error?: string;\n  authedAddress?: string;\n}\n\nconst variants: Record<\n  SignerPendingCardKind,\n  {\n    icon: React.ReactNode;\n    primaryText: string;\n    secondaryText: string;\n    label?: string;\n  }\n> = {\n  google: {\n    icon: <GoogleColorIcon size=\"xl\" />,\n    primaryText: \"Connecting to Google\",\n    secondaryText: \"Continue in the other window\",\n  },\n  discord: {\n    icon: <DiscordColorIcon size=\"xl\" />,\n    primaryText: \"Connecting to Discord\",\n    secondaryText: \"Continue in the other window\",\n  },\n  sms: {\n    icon: <MobileIcon variant=\"solid\" size=\"xl\" />,\n    primaryText: \"\",\n    secondaryText: \"\",\n    label: \"SMS\",\n  },\n  passkey: {\n    icon: <FingerprintIcon size=\"xl\" variant=\"line\" />,\n    primaryText: \"Waiting for Confirmation\",\n    secondaryText: \"Continue in browser\",\n  },\n  metamask: {\n    icon: <MetaMaskColorIcon size=\"xl\" />,\n    primaryText: \"Waiting for Signature\",\n    secondaryText: \"Don't see your wallet? Check your other browser windows\",\n  },\n  argent: {\n    icon: <ArgentColorIcon size=\"xl\" />,\n    primaryText: \"Waiting for Signature\",\n    secondaryText: \"Don't see your wallet? Check your other browser windows\",\n  },\n  rabby: {\n    icon: <RabbyColorIcon size=\"xl\" />,\n    primaryText: \"Waiting for Signature\",\n    secondaryText: \"Don't see your wallet? Check your other browser windows\",\n  },\n  phantom: {\n    icon: <PhantomColorIcon size=\"xl\" />,\n    primaryText: \"Waiting for Signature\",\n    secondaryText: \"Don't see your wallet? Check your other browser windows\",\n  },\n  walletconnect: {\n    icon: <WalletConnectColorIcon size=\"xl\" />,\n    primaryText: \"Waiting for Signature\",\n    secondaryText: \"Continue on your mobile device\",\n    label: \"WalletConnect\",\n  },\n} as const;\n\nexport function SignerPendingCard({\n  className,\n  kind,\n  inProgress,\n  error,\n  authedAddress,\n}: SignerPendingCardProps) {\n  const { icon, primaryText, secondaryText, label } = variants[kind];\n\n  if (kind === \"sms\" && (inProgress || error)) {\n    return <></>;\n  }\n  return (\n    <div\n      className={cn(\n        \"flex flex-col items-center justify-center\",\n        \"w-full h-fit p-10 gap-4\",\n        \"rounded\",\n        \"border border-background-200\",\n        \"bg-background-100\",\n        className,\n      )}\n    >\n      {icon && (\n        <div\n          className={cn(\n            \"w-fit h-fit p-2\",\n            \"rounded-[32px]\",\n            \"border border-background-200\",\n            error && \"border-destructive-100\",\n          )}\n        >\n          {icon}\n        </div>\n      )}\n      <div className=\"flex flex-col gap-2 justify-center items-center\">\n        <span\n          className={cn(\n            \"text-foreground-300 text-sm font-medium text-center\",\n            error && \"text-destructive-100\",\n            authedAddress && \"text-constructive-100\",\n          )}\n        >\n          {error\n            ? error\n            : inProgress\n              ? primaryText\n              : authedAddress\n                ? \"This wallet is already authenticated\"\n                : \"Success!\"}\n        </span>\n        <span\n          className={cn(\"text-foreground-400 text-sm font-medium text-center\")}\n        >\n          {error\n            ? \"Please try connecting again\"\n            : inProgress\n              ? secondaryText\n              : authedAddress\n                ? formatAddress(authedAddress, { size: \"xs\" })\n                : (label || kind.charAt(0).toUpperCase() + kind.slice(1)) +\n                  \" connected\"}\n        </span>\n      </div>\n    </div>\n  );\n}\n"]}