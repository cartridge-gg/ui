{"version":3,"file":"search.js","sourceRoot":"","sources":["../../../../../src/components/modules/marketplace/search/search.tsx"],"names":[],"mappings":";AAAA,OAAO,EACL,qBAAqB,EACrB,uBAAuB,EACvB,wBAAwB,EACxB,uBAAuB,GACxB,MAAM,SAAS,CAAC;AACjB,OAAO,EAAE,EAAE,EAAE,MAAM,SAAS,CAAC;AAC7B,OAAO,EAAE,GAAG,EAAgB,MAAM,0BAA0B,CAAC;AAC7D,OAAO,KAAK,EAAE,EAAkB,WAAW,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEpE,MAAM,yBAAyB,GAAG,GAAG,CAAC,uBAAuB,EAAE;IAC7D,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;SACZ;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;KACnB;CACF,CAAC,CAAC;AAiBH,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,CAAC,UAAU,CAI/C,CACE,EACE,MAAM,EACN,SAAS,EACT,QAAQ,EACR,WAAW,EACX,OAAO,EACP,SAAS,EACT,OAAO,EACP,GAAG,KAAK,EACT,EACD,GAAG,EACH,EAAE;IACF,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE;QACtC,IAAI,CAAC,WAAW;YAAE,OAAO;QACzB,WAAW,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;IAElB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE;QACxB,IAAI,CAAC,QAAQ;YAAE,OAAO,SAAS,CAAC;QAChC,OAAO,CACL,KAAC,qBAAqB,IACpB,KAAK,EAAE,QAAQ,CAAC,KAAK,EACrB,KAAK,EAAE,QAAQ,CAAC,KAAK,EACrB,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,EAAE,GAC/B,CACH,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC;IAExC,MAAM,WAAW,GAAG,WAAW,CAC7B,CAAC,EAAE,KAAK,EAAE,KAAK,EAAgB,EAAE,EAAE;QACjC,IAAI,CAAC,WAAW;YAAE,OAAO;QACzB,WAAW,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;QAC9B,SAAS,CAAC,EAAE,CAAC,CAAC;IAChB,CAAC,EACD,CAAC,WAAW,EAAE,SAAS,CAAC,CACzB,CAAC;IAEF,OAAO,CACL,eACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,EAAE,CAAC,yBAAyB,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,CAAC,KAC5D,KAAK,aAET,KAAC,uBAAuB,IACtB,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,CAAC,IAAI,CAAC,EACb,OAAO,EAAE,OAAO,GAChB,EACF,KAAC,wBAAwB,IAAC,OAAO,EAAE,OAAO,YACvC,OAAO;oBACN,OAAO,CAAC,MAAM,GAAG,CAAC;oBAClB,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CACvC,KAAC,uBAAuB,IAEtB,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,OAAO,EAChB,OAAO,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,IAJvC,KAAK,CAKV,CACH,CAAC,GACqB,IACvB,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import {\n  MarketplaceSearchCard,\n  MarketplaceSearchResult,\n  MarketplaceSearchResults,\n  MarketplaceSearchEngine,\n} from \"@/index\";\nimport { cn } from \"@/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\nimport React, { HTMLAttributes, useCallback, useMemo } from \"react\";\n\nconst marketplaceSearchVariants = cva(\"flex flex-col gap-0.5\", {\n  variants: {\n    variant: {\n      darkest: \"\",\n      darker: \"\",\n      dark: \"\",\n      default: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n});\n\nexport interface SearchResult {\n  image: React.ReactNode;\n  label: string;\n}\n\nexport interface MarketplaceSearchProps\n  extends HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof marketplaceSearchVariants> {\n  search: string;\n  setSearch: (search: string) => void;\n  selected?: SearchResult;\n  setSelected?: (result: SearchResult | undefined) => void;\n  options: SearchResult[];\n}\n\nexport const MarketplaceSearch = React.forwardRef<\n  HTMLDivElement,\n  MarketplaceSearchProps\n>(\n  (\n    {\n      search,\n      setSearch,\n      selected,\n      setSelected,\n      options,\n      className,\n      variant,\n      ...props\n    },\n    ref,\n  ) => {\n    const clearSelection = useCallback(() => {\n      if (!setSelected) return;\n      setSelected(undefined);\n    }, [setSelected]);\n\n    const card = useMemo(() => {\n      if (!selected) return undefined;\n      return (\n        <MarketplaceSearchCard\n          image={selected.image}\n          label={selected.label}\n          onClick={() => clearSelection()}\n        />\n      );\n    }, [selected, variant, clearSelection]);\n\n    const handleClick = useCallback(\n      ({ image, label }: SearchResult) => {\n        if (!setSelected) return;\n        setSelected({ image, label });\n        setSearch(\"\");\n      },\n      [setSelected, setSearch],\n    );\n\n    return (\n      <div\n        ref={ref}\n        className={cn(marketplaceSearchVariants({ variant }), className)}\n        {...props}\n      >\n        <MarketplaceSearchEngine\n          search={search}\n          setSearch={setSearch}\n          cards={[card]}\n          variant={variant}\n        />\n        <MarketplaceSearchResults variant={variant}>\n          {options &&\n            options.length > 0 &&\n            options.map(({ image, label }, index) => (\n              <MarketplaceSearchResult\n                key={index}\n                image={image}\n                label={label}\n                variant={variant}\n                onClick={() => handleClick({ image, label })}\n              />\n            ))}\n        </MarketplaceSearchResults>\n      </div>\n    );\n  },\n);\n\nexport default MarketplaceSearch;\n"]}