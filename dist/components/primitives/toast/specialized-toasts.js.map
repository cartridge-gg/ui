{"version":3,"file":"specialized-toasts.js","sourceRoot":"","sources":["../../../../src/components/primitives/toast/specialized-toasts.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { memo, useState, useEffect } from \"react\";\nimport { cva } from \"class-variance-authority\";\nimport { cn } from \"@/utils\";\nimport {\n  TimesIcon,\n  CheckIcon,\n  SpinnerIcon,\n  AlertIcon,\n  AwardIcon,\n  CreditIcon as CreditsIcon,\n  SparklesIcon,\n} from \"@/components/icons\";\nimport { StarknetIcon } from \"@/components/icons/brand\";\nimport { Toast, ToastClose, type ToastProps } from \"./toast\";\n\n// Base toast container for specialized toasts\nconst specializedToastVariants = cva(\n  \"flex flex-col items-start p-0 bg-background shadow-lg rounded-lg border-0 overflow-hidden relative\",\n  {\n    variants: {\n      variant: {\n        achievement: \"w-[360px] h-[68px]\",\n        network: \"w-[360px] h-[52px]\",\n        error: \"w-[360px] h-[52px] bg-destructive\",\n        transaction: \"w-[360px] h-[52px]\",\n      },\n    },\n    defaultVariants: {\n      variant: \"achievement\",\n    },\n  },\n);\n\n// Close Button Component\ninterface CloseButtonProps {\n  onClick?: () => void;\n  variant?: \"default\" | \"translucent\";\n  className?: string;\n}\n\nconst CloseButton = memo<CloseButtonProps>(\n  ({ onClick, variant = \"default\", className }) => {\n    const iconColorClass =\n      variant === \"translucent\"\n        ? \"text-translucent-dark-200 hover:text-translucent-dark-300\"\n        : \"text-foreground-200 hover:text-foreground\";\n\n    return (\n      <button\n        className={cn(\n          \"flex items-center justify-center w-6 h-6 rounded transition-colors\",\n          iconColorClass,\n          className,\n        )}\n        onClick={onClick}\n      >\n        <TimesIcon size=\"sm\" />\n      </button>\n    );\n  },\n);\n\nCloseButton.displayName = \"CloseButton\";\n\n// XP Tag Component\ninterface XPTagProps {\n  amount: number;\n  isMainnet?: boolean;\n}\n\nconst XPTag = memo<XPTagProps>(({ amount, isMainnet = true }) => (\n  <div className=\"flex items-center gap-[2px]\">\n    <div className=\"w-5 h-5 flex items-center justify-center\">\n      {isMainnet ? (\n        <SparklesIcon variant=\"solid\" size=\"sm\" className=\"text-foreground\" />\n      ) : (\n        <div className=\"w-3 h-3 bg-foreground rounded-sm\" />\n      )}\n    </div>\n    <span className=\"text-foreground text-sm font-normal leading-5\">\n      {amount}\n    </span>\n  </div>\n));\n\nXPTag.displayName = \"XPTag\";\n\n// Toast Progress Bar Component\ninterface ToastProgressBarProps {\n  progress: number; // 0-100\n  variant?: \"achievement\" | \"error\";\n  className?: string;\n}\n\nconst ToastProgressBar = memo<ToastProgressBarProps>(\n  ({ progress, variant = \"achievement\", className }) => {\n    const [animatedProgress, setAnimatedProgress] = useState(0);\n\n    useEffect(() => {\n      const timer = setTimeout(() => setAnimatedProgress(progress), 100);\n      return () => clearTimeout(timer);\n    }, [progress]);\n\n    const getColors = () => {\n      if (variant === \"error\") {\n        return {\n          bg: \"bg-translucent-dark-100\",\n          fill: \"bg-translucent-dark-200\",\n        };\n      }\n      return {\n        bg: \"bg-background-200\",\n        fill: \"bg-achievement\",\n      };\n    };\n\n    const colors = getColors();\n\n    return (\n      <div\n        className={cn(\n          \"absolute bottom-0 left-0 right-0 w-full h-1\",\n          colors.bg,\n          className,\n        )}\n      >\n        <div\n          className={cn(\n            \"h-full transition-all duration-1000 ease-out\",\n            colors.fill,\n          )}\n          style={{ width: `${animatedProgress}%` }}\n        />\n      </div>\n    );\n  },\n);\n\nToastProgressBar.displayName = \"ToastProgressBar\";\n\n// Achievement Toast Component\ninterface AchievementToastProps extends Omit<ToastProps, \"children\"> {\n  title: string;\n  subtitle?: string;\n  xpAmount: number;\n  progress: number;\n  isDraft?: boolean;\n  duration?: number;\n  showClose?: boolean;\n}\n\nconst AchievementToast = memo<AchievementToastProps>(\n  ({\n    title,\n    subtitle = \"Earned!\",\n    xpAmount,\n    progress,\n    isDraft = false,\n    duration,\n    showClose = false,\n    className,\n    ...props\n  }) => {\n    const IconComponent = isDraft ? CreditsIcon : AwardIcon;\n    const iconColor = isDraft\n      ? \"var(--achievement-200)\"\n      : \"var(--achievement-100)\";\n\n    return (\n      <Toast\n        className={cn(\n          specializedToastVariants({ variant: \"achievement\" }),\n          className,\n        )}\n        duration={duration}\n        {...props}\n      >\n        <div className=\"flex items-center justify-between px-3 py-3 w-full flex-1\">\n          <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n            <div className=\"flex items-center justify-center w-10 h-10 bg-background rounded p-[5px] flex-shrink-0\">\n              <IconComponent size=\"lg\" style={{ color: iconColor }} />\n            </div>\n            <div className=\"flex flex-col justify-center gap-[2px] flex-1 min-w-0\">\n              <span className=\"text-foreground text-base font-medium leading-5 tracking-[0.01em] truncate\">\n                {title}\n              </span>\n              <span className=\"text-foreground-300 text-xs font-normal leading-4 truncate\">\n                {subtitle}\n              </span>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2 flex-shrink-0 ml-2\">\n            <XPTag amount={xpAmount} isMainnet={!isDraft} />\n            {showClose && (\n              <ToastClose asChild>\n                <CloseButton />\n              </ToastClose>\n            )}\n          </div>\n        </div>\n        <ToastProgressBar progress={progress} variant=\"achievement\" />\n      </Toast>\n    );\n  },\n);\n\nAchievementToast.displayName = \"AchievementToast\";\n\n// Network Switch Toast Component\ninterface NetworkSwitchToastProps extends Omit<ToastProps, \"children\"> {\n  networkName: string;\n  networkIcon?: React.ReactNode;\n  duration?: number;\n  showClose?: boolean;\n}\n\nconst NetworkSwitchToast = memo<NetworkSwitchToastProps>(\n  ({\n    networkName,\n    networkIcon,\n    duration,\n    showClose = false,\n    className,\n    ...props\n  }) => (\n    <Toast\n      className={cn(\n        specializedToastVariants({ variant: \"network\" }),\n        className,\n      )}\n      duration={duration}\n      {...props}\n    >\n      <div className=\"flex items-center justify-between px-3 py-3 w-full h-full\">\n        <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n          <div className=\"w-6 h-6 rounded-full overflow-hidden flex items-center justify-center flex-shrink-0\">\n            {networkIcon || <StarknetIcon size=\"default\" />}\n          </div>\n          <span className=\"text-foreground text-base font-medium leading-5 tracking-[0.01em] truncate\">\n            Switched to {networkName}\n          </span>\n        </div>\n        {showClose && (\n          <div className=\"flex-shrink-0 ml-2\">\n            <ToastClose asChild>\n              <CloseButton />\n            </ToastClose>\n          </div>\n        )}\n      </div>\n    </Toast>\n  ),\n);\n\nNetworkSwitchToast.displayName = \"NetworkSwitchToast\";\n\n// Error Toast Component\ninterface ErrorToastProps extends Omit<ToastProps, \"children\"> {\n  message: string;\n  progress?: number;\n  duration?: number;\n  showClose?: boolean;\n}\n\nconst ErrorToast = memo<ErrorToastProps>(\n  ({\n    message,\n    progress = 66.7,\n    duration,\n    showClose = false,\n    className,\n    ...props\n  }) => (\n    <Toast\n      className={cn(specializedToastVariants({ variant: \"error\" }), className)}\n      duration={duration}\n      {...props}\n    >\n      <div className=\"flex items-center justify-between px-3 py-3 w-full flex-1\">\n        <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n          <AlertIcon\n            size=\"default\"\n            className=\"text-destructive-foreground flex-shrink-0\"\n          />\n          <span className=\"text-destructive-foreground text-base font-medium leading-5 tracking-[0.01em] truncate\">\n            {message}\n          </span>\n        </div>\n        {showClose && (\n          <div className=\"flex-shrink-0 ml-2\">\n            <ToastClose asChild>\n              <CloseButton variant=\"translucent\" />\n            </ToastClose>\n          </div>\n        )}\n      </div>\n      <ToastProgressBar progress={progress} variant=\"error\" />\n    </Toast>\n  ),\n);\n\nErrorToast.displayName = \"ErrorToast\";\n\n// Transaction Notification Component\ninterface TransactionNotificationProps extends Omit<ToastProps, \"children\"> {\n  status: \"confirming\" | \"confirmed\";\n  isExpanded?: boolean;\n  label?: string;\n  progress?: number;\n  duration?: number;\n  showClose?: boolean;\n}\n\nconst TransactionNotification = memo<TransactionNotificationProps>(\n  ({\n    status,\n    isExpanded = true,\n    label = \"New Game\",\n    progress = 66.7,\n    duration,\n    showClose = false,\n    className,\n    ...props\n  }) => {\n    if (!isExpanded) {\n      return (\n        <Toast\n          className=\"flex items-center justify-center p-[10px] w-12 h-12 bg-background shadow-lg rounded-lg border-0 overflow-hidden\"\n          duration={duration}\n          {...props}\n        >\n          <div className=\"w-7 h-7 flex items-center justify-center\">\n            {status === \"confirming\" ? (\n              <SpinnerIcon\n                size=\"default\"\n                className=\"text-achievement animate-spin\"\n              />\n            ) : (\n              <CheckIcon size=\"default\" className=\"text-achievement\" />\n            )}\n          </div>\n        </Toast>\n      );\n    }\n\n    return (\n      <Toast\n        className={cn(\n          specializedToastVariants({ variant: \"transaction\" }),\n          className,\n        )}\n        duration={duration}\n        {...props}\n      >\n        <div className=\"flex items-center justify-between px-3 py-3 w-full flex-1\">\n          <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n            <div className=\"w-6 h-6 flex items-center justify-center flex-shrink-0\">\n              {status === \"confirming\" ? (\n                <SpinnerIcon\n                  size=\"default\"\n                  className=\"text-foreground animate-spin\"\n                />\n              ) : (\n                <CheckIcon size=\"default\" className=\"text-foreground\" />\n              )}\n            </div>\n            <span className=\"text-foreground text-base font-normal leading-5 tracking-[0.01em] truncate\">\n              {status === \"confirming\" ? \"Confirming\" : \"Confirmed\"}\n            </span>\n            {status === \"confirming\" && (\n              <div className=\"flex items-center px-2 py-1 bg-translucent-dark-100 rounded-[2px] ml-2 flex-shrink-0\">\n                <div className=\"w-4 h-4 mr-1 flex items-center justify-center\">\n                  <div className=\"w-[10px] h-[8px] bg-achievement\" />\n                </div>\n                <span className=\"text-achievement text-xs font-normal leading-4 whitespace-nowrap\">\n                  {label}\n                </span>\n              </div>\n            )}\n          </div>\n          {showClose && (\n            <div className=\"flex-shrink-0 ml-2\">\n              <ToastClose asChild>\n                <CloseButton />\n              </ToastClose>\n            </div>\n          )}\n        </div>\n        <ToastProgressBar\n          progress={status === \"confirmed\" ? 100 : progress}\n          variant=\"achievement\"\n        />\n      </Toast>\n    );\n  },\n);\n\nTransactionNotification.displayName = \"TransactionNotification\";\n\n// Convenience functions for using with the existing toast system\nexport const showAchievementToast = (\n  props: Pick<\n    AchievementToastProps,\n    \"title\" | \"subtitle\" | \"xpAmount\" | \"progress\" | \"isDraft\" | \"duration\"\n  >,\n) => {\n  return {\n    duration: props.duration,\n    action: (\n      <AchievementToast\n        {...props}\n        showClose={true}\n        // Remove Radix props to avoid conflicts\n        open={undefined}\n        onOpenChange={undefined}\n      />\n    ),\n  };\n};\n\nexport const showNetworkSwitchToast = (\n  props: Pick<\n    NetworkSwitchToastProps,\n    \"networkName\" | \"networkIcon\" | \"duration\"\n  >,\n) => {\n  return {\n    duration: props.duration,\n    action: (\n      <NetworkSwitchToast\n        {...props}\n        showClose={true}\n        open={undefined}\n        onOpenChange={undefined}\n      />\n    ),\n  };\n};\n\nexport const showErrorToast = (\n  props: Pick<ErrorToastProps, \"message\" | \"progress\" | \"duration\">,\n) => {\n  return {\n    variant: \"destructive\" as const,\n    duration: props.duration,\n    action: (\n      <ErrorToast\n        {...props}\n        showClose={true}\n        open={undefined}\n        onOpenChange={undefined}\n      />\n    ),\n  };\n};\n\nexport const showTransactionToast = (\n  props: Pick<\n    TransactionNotificationProps,\n    \"status\" | \"isExpanded\" | \"label\" | \"progress\" | \"duration\"\n  >,\n) => {\n  return {\n    duration: props.duration,\n    action: (\n      <TransactionNotification\n        {...props}\n        showClose={true}\n        open={undefined}\n        onOpenChange={undefined}\n      />\n    ),\n  };\n};\n\nexport {\n  AchievementToast,\n  NetworkSwitchToast,\n  ErrorToast,\n  TransactionNotification,\n  CloseButton,\n  XPTag,\n  ToastProgressBar,\n  type AchievementToastProps,\n  type NetworkSwitchToastProps,\n  type ErrorToastProps,\n  type TransactionNotificationProps,\n};\n"]}