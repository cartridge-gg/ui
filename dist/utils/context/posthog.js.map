{"version":3,"file":"posthog.js","sourceRoot":"","sources":["../../../src/utils/context/posthog.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,OAAO,CAAC;AACtC,OAAO,OAAO,MAAM,iBAAiB,CAAC;AAKtC,MAAM,OAAO,cAAe,SAAQ,OAAO;IACzC,OAAO,GACL,KAAK;QACL,OAAO,MAAM,KAAK,WAAW;QAC7B,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAExC,OAAO,CAAC,SAAiB,EAAE,UAAuB;QACzD,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE;gBAC7B,KAAK,EAAE,SAAS;gBAChB,UAAU;aACX,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QACD,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACvC,CAAC;IAEQ,QAAQ,CAAC,UAAkB,EAAE,UAAuB;QAC3D,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE;gBAChC,UAAU;gBACV,UAAU;aACX,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QACD,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IACzC,CAAC;IAEQ,KAAK,CACZ,SAAiB,EACjB,QAAgB,EAChB,UAAuB;QAEvB,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE;gBAC7B,SAAS;gBACT,QAAQ;gBACR,UAAU;aACX,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QACD,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC/C,CAAC;IAEQ,KAAK;QACZ,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,OAAO;QACT,CAAC;QACD,KAAK,CAAC,KAAK,EAAE,CAAC;IAChB,CAAC;IAEQ,KAAK;QACZ,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAC5C,OAAO;QACT,CAAC;QACD,KAAK,CAAC,KAAK,EAAE,CAAC;IAChB,CAAC;IAED,gBAAgB,CAAC,KAAY,EAAE,oBAAiC;QAC9D,MAAM,UAAU,GAAe;YAC7B,gBAAgB,EAAE,OAAO;YACzB,eAAe,EAAE;gBACf;oBACE,IAAI,EAAE,KAAK,CAAC,IAAI;oBAChB,KAAK,EAAE,KAAK,CAAC,OAAO;oBACpB,SAAS,EAAE;wBACT,OAAO,EAAE,IAAI;wBACb,SAAS,EAAE,KAAK;qBACjB;iBACF;aACF;YACD,GAAG,oBAAoB;SACxB,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;IACzC,CAAC;CACF;AAMD,MAAM,CAAC,MAAM,cAAc,GAAG,aAAa,CACzC,SAAS,CACV,CAAC","sourcesContent":["import { createContext } from \"react\";\nimport PostHog from \"posthog-js-lite\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Properties = Record<string, any>;\n\nexport class PostHogWrapper extends PostHog {\n  isLocal =\n    false &&\n    typeof window !== \"undefined\" &&\n    window.location.hostname.includes(\"localhost\");\n\n  override capture(eventName: string, properties?: Properties): void {\n    if (this.isLocal) {\n      console.log(\"[PostHog Event]\", {\n        event: eventName,\n        properties,\n      });\n      return;\n    }\n    super.capture(eventName, properties);\n  }\n\n  override identify(distinctId: string, properties?: Properties): void {\n    if (this.isLocal) {\n      console.log(\"[PostHog Identify]\", {\n        distinctId,\n        properties,\n      });\n      return;\n    }\n    super.identify(distinctId, properties);\n  }\n\n  override group(\n    groupType: string,\n    groupKey: string,\n    properties?: Properties,\n  ): void {\n    if (this.isLocal) {\n      console.log(\"[PostHog Group]\", {\n        groupType,\n        groupKey,\n        properties,\n      });\n      return;\n    }\n    super.group(groupType, groupKey, properties);\n  }\n\n  override reset(): void {\n    if (this.isLocal) {\n      console.log(\"[PostHog Reset]\");\n      return;\n    }\n    super.reset();\n  }\n\n  override debug(): void {\n    if (this.isLocal) {\n      console.log(\"[PostHog Debug Mode Enabled]\");\n      return;\n    }\n    super.debug();\n  }\n\n  captureException(error: Error, additionalProperties?: Properties): void {\n    const properties: Properties = {\n      $exception_level: \"error\",\n      $exception_list: [\n        {\n          type: error.name,\n          value: error.message,\n          mechanism: {\n            handled: true,\n            synthetic: false,\n          },\n        },\n      ],\n      ...additionalProperties,\n    };\n\n    this.capture(\"$exception\", properties);\n  }\n}\n\ninterface PostHogContextType {\n  posthog: PostHogWrapper;\n}\n\nexport const PostHogContext = createContext<PostHogContextType | undefined>(\n  undefined,\n);\n"]}