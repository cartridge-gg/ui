{"version":3,"file":"countervalue.js","sourceRoot":"","sources":["../../../src/utils/hooks/countervalue.ts"],"names":[],"mappings":"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","sourcesContent":["import { useMemo } from \"react\";\nimport {\n  PriceByAddressesQuery,\n  PricePeriodByAddressesQuery,\n  usePriceByAddressesQuery,\n  usePricePeriodByAddressesQuery,\n} from \"../api/cartridge\";\nimport { UseQueryOptions } from \"react-query\";\n\nfunction formatValue(balance: string, amount: string, decimals: number) {\n  const amountValue = parseFloat(amount) / 10 ** decimals;\n  const value = parseFloat(balance) * amountValue;\n  // Round and remove insignificant trailing zeros\n  const rounded = parseFloat(value.toFixed(2));\n  const formatted = value === rounded ? `$${value}` : `~$${rounded}`;\n  return {\n    value,\n    formatted,\n  };\n}\n\nexport function useCountervalue(\n  {\n    tokens,\n  }: {\n    tokens: { balance: string; address: string }[];\n  },\n  options?: UseQueryOptions<\n    PriceByAddressesQuery | PricePeriodByAddressesQuery\n  >,\n) {\n  const addresses = useMemo(\n    () => tokens.map((token) => token.address),\n    [tokens],\n  );\n  const { data: priceData, ...restPriceData } = usePriceByAddressesQuery(\n    {\n      addresses: addresses,\n    },\n    options as UseQueryOptions<PriceByAddressesQuery>,\n  );\n\n  const { start, end } = useMemo(() => {\n    const now = Math.floor(Date.now() / 1000);\n    const yesterday = now - 24 * 60 * 60;\n    return {\n      start: yesterday,\n      end: yesterday + 3600,\n    };\n  }, []);\n\n  const { data: pricePeriodData, ...restPricePeriodData } =\n    usePricePeriodByAddressesQuery(\n      {\n        addresses,\n        start,\n        end,\n      },\n      options as UseQueryOptions<PricePeriodByAddressesQuery>,\n    );\n\n  const countervalues = useMemo(() => {\n    return tokens.map(({ balance, address }) => {\n      const currentPrice = priceData?.priceByAddresses?.find(\n        (price) => BigInt(price.base) === BigInt(address),\n      );\n      const periodPrice = pricePeriodData?.pricePeriodByAddresses?.find(\n        (price) => BigInt(price.base) === BigInt(address),\n      );\n      if (!currentPrice || !periodPrice) {\n        return;\n      }\n      const { value: currentValue, formatted: currentFormatted } = formatValue(\n        balance,\n        currentPrice.amount,\n        currentPrice.decimals,\n      );\n      const { value: periodValue, formatted: periodFormatted } = formatValue(\n        balance,\n        periodPrice.amount,\n        periodPrice.decimals,\n      );\n\n      return {\n        address,\n        balance,\n        current: {\n          value: currentValue,\n          formatted: currentFormatted,\n        },\n        period: {\n          value: periodValue,\n          formatted: periodFormatted,\n        },\n      };\n    });\n  }, [options?.enabled, priceData, pricePeriodData, tokens]);\n\n  return { countervalues, ...restPriceData, ...restPricePeriodData };\n}\n"]}