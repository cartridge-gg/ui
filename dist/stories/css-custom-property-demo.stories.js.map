{"version":3,"file":"css-custom-property-demo.stories.js","sourceRoot":"","sources":["../../src/stories/css-custom-property-demo.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { Meta, StoryObj } from \"@storybook/react\";\nimport React from \"react\";\nimport { useCSSCustomProperty } from \"@/hooks/theme\";\nimport { Button } from \"@/components/primitives/button\";\n\nconst meta: Meta = {\n  title: \"Hooks/useCSSCustomProperty\",\n  component: () => <></>,\n  parameters: {\n    docs: {\n      description: {\n        component:\n          \"Demonstrates the `useCSSCustomProperty` hook that reactively watches for changes to CSS custom properties.\",\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nfunction CSSPropertyDemo() {\n  const coverUrl = useCSSCustomProperty(\"--theme-cover-url\");\n  const iconUrl = useCSSCustomProperty(\"--theme-icon-url\");\n  const primaryColor = useCSSCustomProperty(\"--primary-100\");\n\n  const [counter, setCounter] = React.useState(0);\n\n  const updateProperties = React.useCallback(() => {\n    const colors = [\"#ff6b6b\", \"#4ecdc4\", \"#45b7d1\", \"#96ceb4\", \"#feca57\"];\n    const images = [\n      \"url('https://picsum.photos/800/400?random=1')\",\n      \"url('https://picsum.photos/800/400?random=2')\",\n      \"url('https://picsum.photos/800/400?random=3')\",\n      \"url('https://picsum.photos/800/400?random=4')\",\n    ];\n    const icons = [\n      \"url('https://picsum.photos/100/100?random=10')\",\n      \"url('https://picsum.photos/100/100?random=11')\",\n      \"url('https://picsum.photos/100/100?random=12')\",\n      \"url('https://picsum.photos/100/100?random=13')\",\n    ];\n\n    const newCounter = counter + 1;\n    setCounter(newCounter);\n\n    // Update CSS custom properties\n    document.documentElement.style.setProperty(\n      \"--primary-100\",\n      colors[newCounter % colors.length],\n    );\n    document.documentElement.style.setProperty(\n      \"--theme-cover-url\",\n      images[newCounter % images.length],\n    );\n    document.documentElement.style.setProperty(\n      \"--theme-icon-url\",\n      icons[newCounter % icons.length],\n    );\n  }, [counter]);\n\n  const resetProperties = React.useCallback(() => {\n    document.documentElement.style.removeProperty(\"--primary-100\");\n    document.documentElement.style.removeProperty(\"--theme-cover-url\");\n    document.documentElement.style.removeProperty(\"--theme-icon-url\");\n    setCounter(0);\n  }, []);\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <div className=\"space-y-4\">\n        <h2 className=\"text-xl font-semibold\">\n          CSS Custom Property Watcher Demo\n        </h2>\n        <p className=\"text-foreground-300\">\n          This demo shows how the `useCSSCustomProperty` hook reactively updates\n          when CSS custom properties change.\n        </p>\n      </div>\n\n      <div className=\"flex gap-4\">\n        <Button onClick={updateProperties}>\n          Update Properties ({counter})\n        </Button>\n        <Button variant=\"secondary\" onClick={resetProperties}>\n          Reset to Default\n        </Button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-background-200 p-4 rounded-lg\">\n          <h3 className=\"font-medium mb-2\">Cover URL</h3>\n          <p className=\"text-xs text-foreground-400 break-all\">\n            {coverUrl || \"not set\"}\n          </p>\n          <div\n            className=\"mt-2 h-20 bg-center bg-cover rounded\"\n            style={{ backgroundImage: coverUrl || \"none\" }}\n          />\n        </div>\n\n        <div className=\"bg-background-200 p-4 rounded-lg\">\n          <h3 className=\"font-medium mb-2\">Icon URL</h3>\n          <p className=\"text-xs text-foreground-400 break-all\">\n            {iconUrl || \"not set\"}\n          </p>\n          <div\n            className=\"mt-2 h-20 w-20 bg-center bg-cover rounded\"\n            style={{ backgroundImage: iconUrl || \"none\" }}\n          />\n        </div>\n\n        <div className=\"bg-background-200 p-4 rounded-lg\">\n          <h3 className=\"font-medium mb-2\">Primary Color</h3>\n          <p className=\"text-xs text-foreground-400\">\n            {primaryColor || \"default\"}\n          </p>\n          <div\n            className=\"mt-2 h-20 rounded\"\n            style={{ backgroundColor: primaryColor || \"var(--primary-100)\" }}\n          />\n        </div>\n      </div>\n\n      <div className=\"bg-background-300 p-4 rounded-lg\">\n        <h3 className=\"font-medium mb-2\">Usage Example</h3>\n        <pre className=\"text-xs text-foreground-300 overflow-x-auto\">\n          {`const coverUrl = useCSSCustomProperty(\"--theme-cover-url\");\nconst iconUrl = useCSSCustomProperty(\"--theme-icon-url\");\nconst primaryColor = useCSSCustomProperty(\"--primary-100\");\n\n// These values will automatically update when CSS properties change!`}\n        </pre>\n      </div>\n    </div>\n  );\n}\n\nexport const InteractiveDemo: Story = {\n  render: () => <CSSPropertyDemo />,\n  parameters: {\n    docs: {\n      description: {\n        story:\n          \"Interactive demo showing the `useCSSCustomProperty` hook in action. \" +\n          \"Click 'Update Properties' to see how the hook automatically detects and responds to changes in CSS custom properties. \" +\n          \"The displayed values and visual elements update in real-time as the underlying CSS properties change.\",\n      },\n    },\n  },\n};\n"]}