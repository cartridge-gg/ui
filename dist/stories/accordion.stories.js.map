{"version":3,"file":"accordion.stories.js","sourceRoot":"","sources":["../../src/stories/accordion.stories.tsx"],"names":[],"mappings":";AAAA,OAAO,EACL,SAAS,IAAI,WAAW,EACxB,gBAAgB,EAChB,aAAa,EACb,gBAAgB,GACjB,MAAM,mCAAmC,CAAC;AAE3C,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,KAAK,CAAC;AAE3C,MAAM,IAAI,GAA2B;IACnC,KAAK,EAAE,sBAAsB;IAC7B,SAAS,EAAE,SAAS;IACpB,IAAI,EAAE,CAAC,UAAU,CAAC;CACnB,CAAC;AAEF,eAAe,IAAI,CAAC;AAIpB,MAAM,CAAC,MAAM,OAAO,GAAU;AAC5B,aAAa;CACd,CAAC;AAEF,SAAS,SAAS,CAAC,EAAE,YAAY,EAA6B;IAC5D,OAAO,CACL,KAAC,WAAW,IAAC,IAAI,EAAC,QAAQ,EAAC,WAAW,kBACpC,MAAC,aAAa,IAAC,KAAK,EAAC,QAAQ,aAC3B,MAAC,gBAAgB,IAAC,SAAS,EAAC,OAAO,EAAC,KAAK,EAAE,YAAY,wBAC7C,GAAG,EACX,eAAM,SAAS,EAAC,+BAA+B,0BAAiB,IAC/C,EACnB,KAAC,gBAAgB,IAAC,SAAS,EAAC,QAAQ,YACjC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CACvC,eAAiB,SAAS,EAAC,yBAAyB,aAClD,KAAC,UAAU,IAAC,IAAI,EAAC,IAAI,EAAC,SAAS,EAAC,qBAAqB,GAAG,EACxD,eAAK,SAAS,EAAC,yBAAyB,aACtC,qCAAa,CAAC,GAAG,CAAC,IAAO,EACzB,KAAC,QAAQ,IAAC,IAAI,EAAC,IAAI,EAAC,SAAS,EAAC,qBAAqB,GAAG,IAClD,KALE,CAAC,GAAG,CAAC,CAMT,CACP,CAAC,GACe,IACL,GACJ,CACf,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,MAAM,YAAY,GAAU;IACjC,IAAI,EAAE;QACJ,YAAY,EAAE,sBAAsB;KACrC;CACF,CAAC","sourcesContent":["import {\n  Accordion as UIAccordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/primitives/accordion\";\nimport { Meta, StoryObj } from \"@storybook/react\";\nimport { CircleIcon, InfoIcon } from \"../\";\n\nconst meta: Meta<typeof Accordion> = {\n  title: \"Primitives/Accordion\",\n  component: Accordion,\n  tags: [\"autodocs\"],\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof Accordion>;\n\nexport const Default: Story = {\n  // args: { },\n};\n\nfunction Accordion({ triggerColor }: { triggerColor?: string }) {\n  return (\n    <UIAccordion type=\"single\" collapsible>\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger className=\"gap-1\" color={triggerColor}>\n          Approve{\" \"}\n          <span className=\"text-foreground-200 font-bold\">2 methods</span>\n        </AccordionTrigger>\n        <AccordionContent className=\"gap-px\">\n          {Array.from({ length: 3 }).map((_, i) => (\n            <div key={i + 1} className=\"flex items-center gap-1\">\n              <CircleIcon size=\"sm\" className=\"text-foreground-400\" />\n              <div className=\"flex items-center gap-2\">\n                <div>Method {i + 1}</div>\n                <InfoIcon size=\"sm\" className=\"text-foreground-400\" />\n              </div>\n            </div>\n          ))}\n        </AccordionContent>\n      </AccordionItem>\n    </UIAccordion>\n  );\n}\n\nexport const TriggerColor: Story = {\n  args: {\n    triggerColor: \"text-destructive-100\",\n  },\n};\n"]}