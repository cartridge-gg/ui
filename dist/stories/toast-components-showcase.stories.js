import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { AchievementToast, NetworkSwitchToast, ErrorToast, TransactionNotification, } from "../components/primitives/toast/specialized-toasts";
import { ToastProvider, ToastViewport } from "../components/primitives/toast";
import { StarknetIcon } from "../components/icons/brand";
const meta = {
    title: "Primitives/Toast/Showcase",
    parameters: {
        layout: "padded",
        backgrounds: {
            default: "dark",
            values: [
                { name: "dark", value: "#353535" },
                { name: "light", value: "#ffffff" },
            ],
        },
    },
    decorators: [
        (Story) => (_jsxs(ToastProvider, { children: [_jsx(Story, {}), _jsx(ToastViewport, {})] })),
    ],
};
export default meta;
export const AllToastTypes = {
    render: () => (_jsxs("div", { className: "max-w-4xl mx-auto space-y-8 p-6", children: [_jsxs("div", { className: "text-center mb-8", children: [_jsx("h1", { className: "text-white text-2xl font-bold mb-2", children: "Toast Components Showcase" }), _jsx("p", { className: "text-gray-400 text-sm", children: "All specialized toast components rendered persistently" })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-8", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold border-b border-gray-600 pb-2", children: "Achievement Toasts" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Standard Achievement (66.7% progress)" }), _jsx(AchievementToast, { title: "Pacifist Path", subtitle: "Earned!", xpAmount: 100, progress: 66.7, isDraft: false, showClose: false, 
                                                // Prevent auto-dismiss for showcase
                                                open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Draft Achievement (16.7% progress)" }), _jsx(AchievementToast, { title: "Diamonds", subtitle: "Earned!", xpAmount: 100, progress: 16.7, isDraft: true, showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Completed Achievement (100% progress)" }), _jsx(AchievementToast, { title: "Master Strategist", subtitle: "Completed!", xpAmount: 250, progress: 100, isDraft: false, showClose: false, open: true, onOpenChange: () => { } })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold border-b border-gray-600 pb-2", children: "Network Switch Toasts" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Starknet Mainnet" }), _jsx(NetworkSwitchToast, { networkName: "Starknet Mainnet", networkIcon: _jsx(StarknetIcon, { size: "default" }), showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Custom Network" }), _jsx(NetworkSwitchToast, { networkName: "Nums Chain", networkIcon: _jsx("div", { className: "w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center text-white text-xs font-bold", children: "N" }), showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Ethereum Mainnet" }), _jsx(NetworkSwitchToast, { networkName: "Ethereum Mainnet", networkIcon: _jsx("div", { className: "w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white text-xs font-bold", children: "E" }), showClose: false, open: true, onOpenChange: () => { } })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold border-b border-gray-600 pb-2", children: "Error Toasts" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Execution Error (66.7% progress)" }), _jsx(ErrorToast, { message: "Execution Error", progress: 66.7, showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Network Timeout (30% progress)" }), _jsx(ErrorToast, { message: "Network Timeout", progress: 30, showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Transaction Failed (10% progress)" }), _jsx(ErrorToast, { message: "Transaction Failed", progress: 10, showClose: false, open: true, onOpenChange: () => { } })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold border-b border-gray-600 pb-2", children: "Transaction Notifications" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Confirming Transaction (66.7% progress)" }), _jsx(TransactionNotification, { status: "confirming", isExpanded: true, label: "New Game", progress: 66.7, showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Confirmed Transaction (100% progress)" }), _jsx(TransactionNotification, { status: "confirmed", isExpanded: true, label: "Token Swap", progress: 100, showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Collapsed States" }), _jsxs("div", { className: "flex gap-2", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Confirming" }), _jsx(TransactionNotification, { status: "confirming", isExpanded: false, showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Confirmed" }), _jsx(TransactionNotification, { status: "confirmed", isExpanded: false, showClose: false, open: true, onOpenChange: () => { } })] })] })] })] })] })] })] })),
};
export const ToastStack = {
    render: () => (_jsxs("div", { className: "max-w-md mx-auto space-y-4 p-6", children: [_jsxs("div", { className: "text-center mb-6", children: [_jsx("h2", { className: "text-white text-xl font-bold mb-2", children: "Toast Stack Simulation" }), _jsx("p", { className: "text-gray-400 text-sm", children: "How multiple toasts would appear stacked" })] }), _jsxs("div", { className: "space-y-3", children: [_jsx(AchievementToast, { title: "Quest Complete", subtitle: "Earned!", xpAmount: 150, progress: 100, isDraft: false, showClose: false, open: true, onOpenChange: () => { } }), _jsx(NetworkSwitchToast, { networkName: "Ethereum Mainnet", networkIcon: _jsx("div", { className: "w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white text-xs font-bold", children: "E" }), showClose: false, open: true, onOpenChange: () => { } }), _jsx(TransactionNotification, { status: "confirming", isExpanded: true, label: "Token Swap", progress: 45, showClose: false, open: true, onOpenChange: () => { } }), _jsx(ErrorToast, { message: "Network Timeout", progress: 30, showClose: false, open: true, onOpenChange: () => { } })] })] })),
};
export const ProgressStates = {
    render: () => (_jsxs("div", { className: "max-w-2xl mx-auto space-y-6 p-6", children: [_jsxs("div", { className: "text-center mb-6", children: [_jsx("h2", { className: "text-white text-xl font-bold mb-2", children: "Progress Bar States" }), _jsx("p", { className: "text-gray-400 text-sm", children: "Different progress values across toast types" })] }), _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-white text-sm font-medium mb-3", children: "Achievement Progress" }), _jsx("div", { className: "space-y-2", children: [10, 25, 50, 75, 100].map((progress) => (_jsxs("div", { children: [_jsxs("p", { className: "text-gray-400 text-xs mb-1", children: [progress, "% Complete"] }), _jsx(AchievementToast, { title: `Achievement ${progress}%`, subtitle: "In Progress", xpAmount: progress, progress: progress, isDraft: progress < 100, showClose: false, open: true, onOpenChange: () => { } })] }, progress))) })] }), _jsxs("div", { children: [_jsx("h3", { className: "text-white text-sm font-medium mb-3", children: "Error Progress" }), _jsx("div", { className: "space-y-2", children: [15, 40, 65, 90].map((progress) => (_jsxs("div", { children: [_jsxs("p", { className: "text-gray-400 text-xs mb-1", children: [progress, "% Progress"] }), _jsx(ErrorToast, { message: `Error at ${progress}%`, progress: progress, showClose: false, open: true, onOpenChange: () => { } })] }, progress))) })] })] })] })),
};
export const DurationGuide = {
    render: () => (_jsxs("div", { className: "max-w-3xl mx-auto space-y-6 p-6", children: [_jsxs("div", { className: "text-center mb-6", children: [_jsx("h2", { className: "text-white text-xl font-bold mb-2", children: "Duration Guidelines" }), _jsx("p", { className: "text-gray-400 text-sm", children: "Recommended duration settings for different toast types" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold", children: "Quick Notifications" }), _jsx("p", { className: "text-gray-400 text-sm mb-3", children: "2-3 seconds \u2022 Simple confirmations" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Network Switch (3s)" }), _jsx(NetworkSwitchToast, { networkName: "Quick Switch", showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Confirmed Transaction (3s)" }), _jsx(TransactionNotification, { status: "confirmed", isExpanded: true, label: "Quick Action", progress: 100, showClose: false, open: true, onOpenChange: () => { } })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold", children: "Standard Notifications" }), _jsx("p", { className: "text-gray-400 text-sm mb-3", children: "4-6 seconds \u2022 Achievements, progress" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Achievement (4s)" }), _jsx(AchievementToast, { title: "Standard Achievement", subtitle: "Earned!", xpAmount: 100, progress: 75, isDraft: false, showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Error (5s)" }), _jsx(ErrorToast, { message: "Standard Error", progress: 50, showClose: false, open: true, onOpenChange: () => { } })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold", children: "Important Notifications" }), _jsx("p", { className: "text-gray-400 text-sm mb-3", children: "6-10 seconds \u2022 Critical errors, long processes" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Confirming Transaction (8s)" }), _jsx(TransactionNotification, { status: "confirming", isExpanded: true, label: "Important Process", progress: 40, showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Critical Error (10s)" }), _jsx(ErrorToast, { message: "Critical System Error", progress: 20, showClose: false, open: true, onOpenChange: () => { } })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold", children: "Persistent Toasts" }), _jsx("p", { className: "text-gray-400 text-sm mb-3", children: "Manual dismiss \u2022 Requires user action" }), _jsx("div", { className: "space-y-2", children: _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Manual Dismiss Only" }), _jsx(AchievementToast, { title: "Persistent Achievement", subtitle: "Click to dismiss", xpAmount: 500, progress: 100, isDraft: false, showClose: false, open: true, onOpenChange: () => { } })] }) })] })] })] })),
};
export const WithCloseButtons = {
    render: () => (_jsxs("div", { className: "max-w-4xl mx-auto space-y-8 p-6", children: [_jsxs("div", { className: "text-center mb-8", children: [_jsx("h1", { className: "text-white text-2xl font-bold mb-2", children: "Toast Components with Close Buttons" }), _jsx("p", { className: "text-gray-400 text-sm", children: "Interactive toast components showing close button functionality" })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-8", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold border-b border-gray-600 pb-2", children: "Achievement Toasts" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Standard Achievement with Close Button" }), _jsx(AchievementToast, { title: "Pacifist Path", subtitle: "Earned!", xpAmount: 100, progress: 66.7, isDraft: false, showClose: true, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Draft Achievement with Close Button" }), _jsx(AchievementToast, { title: "Diamonds", subtitle: "Earned!", xpAmount: 100, progress: 16.7, isDraft: true, showClose: true, open: true, onOpenChange: () => { } })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold border-b border-gray-600 pb-2", children: "Network Switch Toasts" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Starknet Mainnet with Close Button" }), _jsx(NetworkSwitchToast, { networkName: "Starknet Mainnet", networkIcon: _jsx(StarknetIcon, { size: "default" }), showClose: true, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Custom Network with Close Button" }), _jsx(NetworkSwitchToast, { networkName: "Ethereum Mainnet", networkIcon: _jsx("div", { className: "w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white text-xs font-bold", children: "E" }), showClose: true, open: true, onOpenChange: () => { } })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold border-b border-gray-600 pb-2", children: "Error Toasts" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Execution Error with Close Button" }), _jsx(ErrorToast, { message: "Execution Error", progress: 66.7, showClose: true, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Network Timeout with Close Button" }), _jsx(ErrorToast, { message: "Network Timeout", progress: 30, showClose: true, open: true, onOpenChange: () => { } })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-white text-lg font-semibold border-b border-gray-600 pb-2", children: "Transaction Notifications" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Confirming Transaction with Close Button" }), _jsx(TransactionNotification, { status: "confirming", isExpanded: true, label: "New Game", progress: 66.7, showClose: true, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Confirmed Transaction with Close Button" }), _jsx(TransactionNotification, { status: "confirmed", isExpanded: true, label: "Token Swap", progress: 100, showClose: true, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-2", children: "Collapsed States (no close buttons)" }), _jsxs("div", { className: "flex gap-2", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Confirming" }), _jsx(TransactionNotification, { status: "confirming", isExpanded: false, showClose: false, open: true, onOpenChange: () => { } })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-400 text-xs mb-1", children: "Confirmed" }), _jsx(TransactionNotification, { status: "confirmed", isExpanded: false, showClose: false, open: true, onOpenChange: () => { } })] })] })] })] })] })] }), _jsxs("div", { className: "mt-8 p-4 bg-gray-800 rounded-lg", children: [_jsx("h3", { className: "text-white text-sm font-medium mb-2", children: "Close Button Behavior" }), _jsxs("ul", { className: "text-gray-400 text-xs space-y-1", children: [_jsxs("li", { children: ["\u2022 ", _jsx("strong", { children: "Achievement & Transaction toasts:" }), " Standard close button (gray hover state)"] }), _jsxs("li", { children: ["\u2022 ", _jsx("strong", { children: "Error toasts:" }), " Translucent close button (darker on hover)"] }), _jsxs("li", { children: ["\u2022 ", _jsx("strong", { children: "Network toasts:" }), " Standard close button positioned on the right"] }), _jsxs("li", { children: ["\u2022 ", _jsx("strong", { children: "Collapsed transaction toasts:" }), " No close button (too small)"] })] })] })] })),
};
//# sourceMappingURL=toast-components-showcase.stories.js.map